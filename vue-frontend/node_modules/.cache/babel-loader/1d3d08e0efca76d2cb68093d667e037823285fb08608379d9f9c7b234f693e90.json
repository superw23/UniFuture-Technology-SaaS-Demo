{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      address: '',\n      //store the address of the supplier\n      remarks: '',\n      //store the remarks of the supplier\n      contact: '',\n      //store the email of the supplier\n      phoneNumber: '',\n      //store the phone number of the supplier\n      company: '',\n      //store the company name of the supplier\n      isSuccess: false,\n      //true if the supplier is added successfully, else false\n      supplierExist: false,\n      //true if the customer with the same name has already exists, else false\n      contact: '',\n      showError: false,\n      showError2: false\n    };\n  },\n  methods: {\n    // add a new supplier\n    // pass the supplier information to the backend\n    onCreatePost() {\n      // Check if there is an error in the email or phone number input\n      if (this.showError || this.showError2) {\n        alert('Please correct the errors before submitting.');\n        return;\n      }\n\n      // Send a POST request to add a new supplier\n      axios.post(`addSupplier`, {\n        address: this.address,\n        phoneNumber: this.phoneNumber,\n        contact: this.contact,\n        remarks: this.remarks,\n        company: this.company\n      }).then(response => {\n        if (response.data == '') {\n          this.supplierExist = true;\n          this.isSuccess = false;\n        }\n        // Set isSuccess to true if the supplier is added successfully\n        else {\n          this.isSuccess = true;\n          this.supplierExist = false;\n          this.address = '', this.phoneNumber = '', this.contact = '', this.remarks = '', this.company = '';\n        }\n      });\n    },\n    //Check if the email is valid\n    validateEmail() {\n      // Regular expression for email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n      // Check if the input is a valid email address\n      if (!emailRegex.test(this.contact)) {\n        // Show the error message\n        this.showError = true;\n      } else {\n        // Hide the error message\n        this.showError = false;\n      }\n    },\n    //Check if the phone number is valid, i.e., it only contains phone number\n    validatePhoneNumber() {\n      const numberRegex = /^[0-9]*$/;\n\n      // Check if the input is a valid phone number\n      if (!numberRegex.test(this.phoneNumber)) {\n        // Show the error message\n        this.showError2 = true;\n      } else {\n        // Hide the error message\n        this.showError2 = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAwEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MAAC;MACZC,OAAO,EAAE,EAAE;MAAC;MACZC,OAAO,EAAE,EAAE;MAAC;MACZC,WAAW,EAAE,EAAE;MAAC;MAChBC,OAAO,EAAE,EAAE;MAAC;MACZC,SAAS,EAAE,KAAK;MAAE;MAClBC,aAAa,EAAE,KAAK;MAAC;MACrBJ,OAAO,EAAE,EAAE;MACXK,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;IAGhB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACAC,YAAY,GAAG;MACX;MACA,IAAI,IAAI,CAACH,SAAQ,IAAK,IAAI,CAACC,UAAU,EAAE;QACnCG,KAAK,CAAC,8CAA8C,CAAC;QACrD;MACJ;;MAEA;MACAb,KAAI,CACCc,IAAI,CAAE,aAAY,EAAE;QACjBZ,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBG,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BD,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBD,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBG,OAAO,EAAE,IAAI,CAACA;MAClB,CAAC,EACAS,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAGA,QAAQ,CAACf,IAAI,IAAE,EAAE,EAAC;UACjB,IAAI,CAACO,aAAY,GAAI,IAAG;UACxB,IAAI,CAACD,SAAQ,GAAI,KAAI;QACzB;QACA;QAAA,KACI;UACA,IAAI,CAACA,SAAQ,GAAI,IAAG;UACpB,IAAI,CAACC,aAAY,GAAI,KAAI;UACzB,IAAI,CAACN,OAAM,GAAI,EAAE,EACjB,IAAI,CAACG,WAAU,GAAI,EAAE,EACrB,IAAI,CAACD,OAAM,GAAI,EAAE,EACjB,IAAI,CAACD,OAAM,GAAI,EAAE,EACjB,IAAI,CAACG,OAAM,GAAI,EAAC;QACpB;MACJ,CAAC,CAAC;IACV,CAAC;IACD;IACCW,aAAa,GAAG;MACX;MACA,MAAMC,UAAS,GAAI,4BAA4B;;MAE/C;MACA,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAACf,OAAO,CAAC,EAAE;QAClC;QACA,IAAI,CAACK,SAAQ,GAAI,IAAI;MACvB,OAAO;QACL;QACA,IAAI,CAACA,SAAQ,GAAI,KAAK;MACxB;IACL,CAAC;IACF;IACCW,mBAAmB,GAAG;MAClB,MAAMC,WAAU,GAAI,UAAU;;MAE9B;MACA,IAAI,CAACA,WAAW,CAACF,IAAI,CAAC,IAAI,CAACd,WAAW,CAAC,EAAE;QACzC;QACG,IAAI,CAACK,UAAS,GAAI,IAAI;MACzB,OAAO;QACJ;QACA,IAAI,CAACA,UAAS,GAAI,KAAK;MAC1B;IACJ;EACL;AACJ,CAAC","names":["axios","data","address","remarks","contact","phoneNumber","company","isSuccess","supplierExist","showError","showError2","methods","onCreatePost","alert","post","then","response","validateEmail","emailRegex","test","validatePhoneNumber","numberRegex"],"sourceRoot":"","sources":["C:\\Users\\SuperW\\Desktop\\暑期实习\\vue-frontend\\src\\components\\Procurement\\Supplier\\AddSupplier.vue"],"sourcesContent":["// Made by GRPTeam202205\r\n<template>\r\n    <!-- Add supplier page -->\r\n    <div>\r\n        <!-- Title of the page -->\r\n        <h2>{{$t('Supplier.Add Supplier')}}</h2>\r\n        <hr />\r\n        <div class=\"icon1\"></div> <div class=\"empty-row\"></div> <div class=\"icon2\"></div>\r\n\r\n        <div class=\"row col-md-4 offset-md-4\">\r\n            <!-- Show the following message if the supplier is to the database successfully-->\r\n            <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n                {{$t('Supplier.The supplier is added successfully!')}}\r\n            </div>\r\n            <!-- Show the following message if the supplier already exists-->\r\n            <div class=\"alert alert-danger\" v-if=\"supplierExist\">\r\n                {{$t('Supplier.The supplier already exists!')}}\r\n            </div>\r\n            <!-- Supplier form to collect info of the supplier to be added -->\r\n            <div class=\"panel panel-primary\">\r\n                <div class=\"panel-body\">\r\n                    <form @submit.prevent=\"onCreatePost\">\r\n                        <!-- Input company of the supplier -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"company\">{{$t('Company')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Company A')\" id= \"company\" v-model=\"company\" required>\r\n                        </div>\r\n                        <!-- Input address of the customer -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"address\">{{$t('Address')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Tai Kang Road 199 ')\" id= \"address\" v-model=\"address\" required>\r\n                        </div>\r\n                        <!-- Input email of the customer -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"contact\">{{$t('Email')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Sally@gmail.com')\" id= \"contact\" v-model=\"contact\" @input=\"validateEmail\" required>\r\n                            <div v-if=\"showError\" class=\"text-danger\">{{ $t('Please input a valid email address') }}</div>\r\n                        </div>\r\n                        <!-- Input phone number of the customer -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"phoneNumber\">{{ $t('Phone Number') }}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. 12345678900')\" id=\"phoneNumber\" v-model=\"phoneNumber\" @input=\"validatePhoneNumber\" required>\r\n                            <div v-if=\"showError2\" class=\"text-danger\">{{ $t('Please input a valid phone number') }}</div>\r\n                        </div>\r\n                        <!-- Input description of the customer -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"remarks\">{{$t('Description')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Add remarks')\" id= \"remarks\" v-model=\"remarks\" required>\r\n                        </div>\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"empty-row2\"></div>\r\n                            <div class=\"col-6\">\r\n                                <!-- Click the button to submit the supplier form to the backend -->\r\n                                <button type=\"submit\" class=\"btn btn-primary\">\r\n                                    {{$t('Supplier.Add Supplier')}}\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <router-link :to=\"{name:'Supplier'}\">\r\n                                    <!-- Click the button to go to supplier table page -->\r\n                                    <button type=\"button\" class=\"btn btn-outline-primary\">{{$t('Supplier.View Suppliers')}}</button>\r\n                                </router-link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data() {\r\n        return {\r\n            address: '',//store the address of the supplier\r\n            remarks: '',//store the remarks of the supplier\r\n            contact: '',//store the email of the supplier\r\n            phoneNumber: '',//store the phone number of the supplier\r\n            company: '',//store the company name of the supplier\r\n            isSuccess: false, //true if the supplier is added successfully, else false\r\n            supplierExist: false,//true if the customer with the same name has already exists, else false\r\n            contact: '',\r\n            showError: false,\r\n            showError2: false,\r\n\r\n\r\n        };\r\n    },\r\n    methods: {\r\n        // add a new supplier\r\n        // pass the supplier information to the backend\r\n        onCreatePost() {\r\n            // Check if there is an error in the email or phone number input\r\n            if (this.showError || this.showError2) {\r\n                alert('Please correct the errors before submitting.');\r\n                return;\r\n            }\r\n\r\n            // Send a POST request to add a new supplier\r\n            axios\r\n                .post(`addSupplier`, {\r\n                    address: this.address,\r\n                    phoneNumber: this.phoneNumber,\r\n                    contact: this.contact,\r\n                    remarks: this.remarks,\r\n                    company: this.company\r\n                })\r\n                .then((response) => {\r\n                    if(response.data==''){\r\n                        this.supplierExist = true\r\n                        this.isSuccess = false\r\n                    }\r\n                    // Set isSuccess to true if the supplier is added successfully\r\n                    else{\r\n                        this.isSuccess = true\r\n                        this.supplierExist = false\r\n                        this.address = '',\r\n                        this.phoneNumber = '',\r\n                        this.contact = '',\r\n                        this.remarks = '',\r\n                        this.company = ''\r\n                    }\r\n                });\r\n        },\r\n        //Check if the email is valid\r\n         validateEmail() {\r\n              // Regular expression for email validation\r\n              const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n              // Check if the input is a valid email address\r\n              if (!emailRegex.test(this.contact)) {\r\n                // Show the error message\r\n                this.showError = true;\r\n              } else {\r\n                // Hide the error message\r\n                this.showError = false;\r\n              }\r\n         },\r\n        //Check if the phone number is valid, i.e., it only contains phone number\r\n         validatePhoneNumber() {\r\n             const numberRegex = /^[0-9]*$/;\r\n\r\n             // Check if the input is a valid phone number\r\n             if (!numberRegex.test(this.phoneNumber)) {\r\n             // Show the error message\r\n                this.showError2 = true;\r\n             } else {\r\n                // Hide the error message\r\n                this.showError2 = false;\r\n             }\r\n         },\r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}