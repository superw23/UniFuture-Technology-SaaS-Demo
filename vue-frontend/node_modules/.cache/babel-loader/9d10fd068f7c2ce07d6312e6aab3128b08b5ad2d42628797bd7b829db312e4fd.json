{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"alert alert-success\"\n};\nconst _hoisted_5 = {\n  class: \"form-area\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  for: \"userName\"\n};\nconst _hoisted_8 = [\"placeholder\"];\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  for: \"email\"\n};\nconst _hoisted_11 = [\"placeholder\"];\nconst _hoisted_12 = {\n  class: \"form-item login\"\n};\nconst _hoisted_13 = {\n  class: \"forget\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Title of the page \"), _createElementVNode(\"h2\", null, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('Forget Password')), 1 /* TEXT */)]), _createCommentVNode(\" Show the following message if the user name is not found \"), $data.userNameNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('User Name does not exist!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if the email is not found \"), $data.emailNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('Email is not correct!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if the password has been sent to the user email successfully  \"), $data.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.$t('Your password has been sent to your email!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Forget password form \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" User Name \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"label\", _hoisted_7, _toDisplayString(_ctx.$t('User Name')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: _ctx.$t('e.g. Ella'),\n    maxlength: \"14\",\n    id: \"userName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userName = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_8), [[_vModelText, $data.userName]])]), _createCommentVNode(\" Password \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"label\", _hoisted_10, _toDisplayString(_ctx.$t('Email')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    placeholder: _ctx.$t('e.g. Ella@gmail.com'),\n    maxlength: \"50\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_11), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_12, [_createCommentVNode(\" Confirm button \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendEmail && $options.sendEmail(...args))\n  }, _toDisplayString(_ctx.$t('Confirm')), 1 /* TEXT */), _createCommentVNode(\" Login link \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goToLoginPage && $options.goToLoginPage(...args))\n  }, _toDisplayString(_ctx.$t('Login')), 1 /* TEXT */)])])])]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAM;;;EAMRA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC;AAAU;;;EAIpBD,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC;AAAO;;;EAGjBD,KAAK,EAAC;AAAiB;;EAInBA,KAAK,EAAC;AAAQ;;uBAjC/BE,oBAsCM,OAtCNC,UAsCM,GArCFC,0CAA0B,EAC1BC,oBAEK,aADDA,oBAAsC,+BAA9BC,OAAE,uCAEdF,iFAAiE,EAC3BG,sBAAgB,kBAAtDL,oBAEM,OAFNM,UAEM,mBADIF,OAAE,oFAEZF,6EAA6D,EACvBG,mBAAa,kBAAnDL,oBAEM,OAFNO,UAEM,mBADIH,OAAE,gFAEZF,iHAAiG,EAC1DG,aAAO,kBAA9CL,oBAEM,OAFNQ,UAEM,mBADAJ,OAAE,qGAERF,6CAA6B,EAC7BC,oBAmBM,OAnBNM,UAmBM,GAlBFP,kCAAkB,EAClBC,oBAGM,OAHNO,UAGM,GAFFP,oBAAiD,SAAjDQ,UAAiD,mBAAzBP,OAAE,+CAC1BD,oBAAiI;IAA1HS,IAAI,EAAC,MAAM;IAACd,KAAK,EAAC,cAAc;IAAEe,WAAW,EAAET,OAAE;IAAeU,SAAS,EAAC,IAAI;IAACC,EAAE,EAAE,UAAU;+DAAUV,cAAQ;IAAEW,QAAQ,EAAR;sDAAVX,cAAQ,OAE1HH,iCAAiB,EACjBC,oBAGM,OAHNc,UAGM,GAFFd,oBAA0C,SAA1Ce,WAA0C,mBAArBd,OAAE,2CACvBD,oBAAsI;IAA/HS,IAAI,EAAC,OAAO;IAACd,KAAK,EAAC,cAAc;IAAEe,WAAW,EAAET,OAAE;IAAyBU,SAAS,EAAC,IAAI;IAACC,EAAE,EAAE,OAAO;+DAAUV,WAAK;IAAEW,QAAQ,EAAR;uDAAPX,WAAK,OAE/HF,oBAOM,OAPNgB,WAOM,GANFjB,uCAAuB,EACvBC,oBAAqD;IAA5CiB,OAAK,yCAAEC,iDAAS;sBAAIjB,OAAE,6BAC/BF,mCAAmB,EACnBC,oBAEE,OAFFmB,WAEE,GADFnB,oBAAsD;IAAnDoB,IAAI,EAAC,GAAG;IAAEH,OAAK,yCAAEC,yDAAa;sBAAIjB,OAAE","names":["class","for","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_ctx","$data","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","type","placeholder","maxlength","id","required","_hoisted_9","_hoisted_10","_hoisted_12","onClick","$options","_hoisted_13","href"],"sourceRoot":"","sources":["C:\\Users\\SuperW\\Desktop\\暑期实习\\vue-frontend\\src\\components\\Login\\ForgetPassword.vue"],"sourcesContent":["//Made by GRPTeam202205\r\n<template>\r\n    <div class=\"form\">\r\n        <!-- Title of the page -->\r\n        <h2>\r\n            <span>{{$t('Forget Password')}}</span>\r\n        </h2>\r\n        <!-- Show the following message if the user name is not found -->\r\n        <div class=\"alert alert-danger\" v-if=\"userNameNotFound\">\r\n                {{$t('User Name does not exist!')}}\r\n        </div>\r\n        <!-- Show the following message if the email is not found -->\r\n        <div class=\"alert alert-danger\" v-if=\"emailNotFound\">\r\n                {{$t('Email is not correct!')}}\r\n        </div>\r\n        <!-- Show the following message if the password has been sent to the user email successfully  -->\r\n        <div class=\"alert alert-success\" v-if=\"success\">\r\n            {{$t('Your password has been sent to your email!')}}\r\n        </div>\r\n        <!-- Forget password form -->\r\n        <div class=\"form-area\">\r\n            <!-- User Name -->\r\n            <div class=\"form-group\">\r\n                <label for=\"userName\">{{$t('User Name')}}</label>\r\n                <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Ella')\" maxlength=\"14\" id= \"userName\" v-model=\"userName\" required>    \r\n            </div>\r\n            <!-- Password -->\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">{{$t('Email')}}</label>\r\n                <input type=\"email\" class=\"form-control\" :placeholder=\"$t('e.g. Ella@gmail.com')\" maxlength=\"50\" id= \"email\" v-model=\"email\" required>    \r\n            </div>\r\n            <div class=\"form-item login\">\r\n                <!-- Confirm button -->\r\n                <button @click=\"sendEmail\">{{$t('Confirm')}}</button>\r\n                <!-- Login link -->\r\n                <div class=\"forget\">\r\n                <a href=\"#\" @click=\"goToLoginPage\">{{$t('Login')}}</a>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data () {\r\n    return {\r\n        userNameNotFound: false,//true if the user is not found, else false\r\n        emailNotFound: false,//true if the email is not found, else false\r\n        success: false,//true if the email is sent to the user successfully, else false\r\n        userName: '',//store the name of the user\r\n        email: '',//store the email of the user\r\n        loginBg: 'url('+require('@/assets/bg.jpg')+')'//store the background image\r\n    }\r\n  },\r\n  methods: {\r\n    //send email to the user to inform him of his password\r\n    sendEmail(){\r\n        axios\r\n            .get('sendEmail', {params:{userName: this.userName,\r\n                    email: this.email}  \r\n            })\r\n            .then((response) => {\r\n                if(response.data=='userNameNotFound'){\r\n                    this.userNameNotFound = true;\r\n                    this.emailNotFound = false;\r\n                    this.success = false;\r\n                }\r\n                else if(response.data=='emailNotFound'){\r\n                    this.userNameNotFound = false;\r\n                    this.emailNotFound = true;\r\n                    this.success = false;\r\n                }\r\n                else{\r\n                    this.success = true;\r\n                    this.userNameNotFound = false;\r\n                    this.emailNotFound = false;\r\n                }\r\n            });\r\n    },\r\n    //go to the login page\r\n    goToLoginPage(){\r\n        this.$router.push({path:'/'})\r\n    }\r\n  },\r\n  mounted () {\r\n    //add backgroun image\r\n    document.body.style.backgroundSize = '100%'\r\n    document.body.style.backgroundImage = this.loginBg\r\n  },\r\n  beforeUnmount () {\r\n    // Clear the backgroun before going to another page\r\n    document.body.style.backgroundImage = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.form {\r\n    width: 500px;\r\n    height: 500px;\r\n    background: #fff;\r\n    margin: 80px auto;\r\n}\r\n\r\n.form-area {\r\n    width: 400px;\r\n    margin-top: 90px;\r\n    margin-left: 50px;\r\n}\r\n\r\n.form-item {\r\n    width: 400px;\r\n    height: 42px;\r\n    position: relative;\r\n}\r\n\r\n.form-item.login {\r\n    margin-top: 60px;\r\n    border-radius: 5px;\r\n}\r\n.form-item button {\r\n    width: 101%;\r\n    height: 101%;\r\n    font-size: 18px;\r\n    border: 0;\r\n    outline: none;\r\n    background-color: #3b97b7;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n}\r\n.forget {\r\n    margin: 15px 0 20px 5px;\r\n    font-size: 15px;\r\n}\r\n.forget a {\r\n    color: #9e9e9e;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}