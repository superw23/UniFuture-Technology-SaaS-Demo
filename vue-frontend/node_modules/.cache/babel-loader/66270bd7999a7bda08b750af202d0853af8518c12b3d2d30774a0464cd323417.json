{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_4 = {\n  class: \"form-area\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  for: \"userName\"\n};\nconst _hoisted_7 = [\"placeholder\"];\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  for: \"password\"\n};\nconst _hoisted_10 = [\"placeholder\"];\nconst _hoisted_11 = {\n  class: \"form-item login\"\n};\nconst _hoisted_12 = {\n  class: \"forget\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Login in title \"), _createElementVNode(\"h2\", null, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.$t('CloudWalker')), 1 /* TEXT */), _createElementVNode(\"i\", {\n    class: \"fa fa-language\",\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.translate && $options.translate(...args))\n  })]), _createCommentVNode(\" Show the following message if the user is not found\"), $data.userNameNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.$t('User Name does not exist!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if the password is not correct\"), $data.passwordNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('Password is not correct!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Login form \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" User Name \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t('User Name')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: _ctx.$t('e.g. Ella'),\n    maxlength: \"14\",\n    id: \"userName\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userName = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_7), [[_vModelText, $data.userName]])]), _createCommentVNode(\" Password \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"label\", _hoisted_9, _toDisplayString(_ctx.$t('Password')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    placeholder: _ctx.$t('e.g. Password'),\n    maxlength: \"14\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_10), [[_vModelText, $data.password]])]), _createCommentVNode(\" Login button \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.login && $options.login(...args))\n  }, _toDisplayString(_ctx.$t('Login')), 1 /* TEXT */)]), _createCommentVNode(\" Forget password button \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.forgetPassword && $options.forgetPassword(...args))\n  }, _toDisplayString(_ctx.$t('Forget Password')), 1 /* TEXT */)])])]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAM;;;EAORA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAY;;EAChBC,GAAG,EAAC;AAAU;;;EAIhBD,KAAK,EAAC;AAAY;;EAChBC,GAAG,EAAC;AAAU;;;EAKhBD,KAAK,EAAC;AAAiB;;EAIvBA,KAAK,EAAC;AAAQ;;uBAhC3BE,oBAoCM,OApCNC,UAoCM,GAnCFC,uCAAuB,EACvBC,oBAGK,aAFDA,oBAAuC,+BAA5BC,OAAE,iCACbD,oBAA+D;IAA5DL,KAAK,EAAC,gBAAgB;IAACO,IAAI,EAAC,QAAQ;IAAEC,OAAK,yCAAEC,iDAAS;QAE7DL,2EAA2D,EACrBM,sBAAgB,kBAAtDR,oBAEM,OAFNS,UAEM,mBADIL,OAAE,oFAEZF,iFAAiE,EAC3BM,sBAAgB,kBAAtDR,oBAEM,OAFNU,UAEM,mBADIN,OAAE,mFAEZF,mCAAmB,EACnBC,oBAoBM,OApBNQ,UAoBM,GAnBFT,kCAAkB,EAClBC,oBAGM,OAHNS,UAGM,GAFNT,oBAAiD,SAAjDU,UAAiD,mBAAzBT,OAAE,+CAC1BD,oBAAiI;IAA1HE,IAAI,EAAC,MAAM;IAACP,KAAK,EAAC,cAAc;IAAEgB,WAAW,EAAEV,OAAE;IAAeW,SAAS,EAAC,IAAI;IAACC,EAAE,EAAE,UAAU;+DAAUR,cAAQ;IAAES,QAAQ,EAAR;sDAAVT,cAAQ,OAEtHN,iCAAiB,EACjBC,oBAGM,OAHNe,UAGM,GAFNf,oBAAgD,SAAhDgB,UAAgD,mBAAxBf,OAAE,8CAC1BD,oBAAyI;IAAlIE,IAAI,EAAC,UAAU;IAACP,KAAK,EAAC,cAAc;IAAEgB,WAAW,EAAEV,OAAE;IAAmBW,SAAS,EAAC,IAAI;IAACC,EAAE,EAAE,UAAU;+DAAUR,cAAQ;IAAES,QAAQ,EAAR;uDAAVT,cAAQ,OAG9HN,qCAAqB,EACrBC,oBAEM,OAFNiB,WAEM,GADFjB,oBAA+C;IAAtCG,OAAK,yCAAEC,yCAAK;sBAAIH,OAAE,6BAE/BF,+CAA+B,EAC/BC,oBAEM,OAFNkB,WAEM,GADFlB,oBAAiE;IAA9DmB,IAAI,EAAC,GAAG;IAAEhB,OAAK,yCAAEC,2DAAc;sBAAIH,OAAE","names":["class","for","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_ctx","type","onClick","$options","$data","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","placeholder","maxlength","id","required","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","href"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Login\\Login.vue"],"sourcesContent":["//Made by GRPTeam202205\r\n<template>\r\n    <div class=\"form\">\r\n        <!-- Login in title -->\r\n        <h2>\r\n            <span>   {{$t('CloudWalker')}}  </span>\r\n            <i class=\"fa fa-language\" type=\"button\" @click=\"translate\"></i>\r\n        </h2>\r\n        <!-- Show the following message if the user is not found-->\r\n        <div class=\"alert alert-danger\" v-if=\"userNameNotFound\">\r\n                {{$t('User Name does not exist!')}}\r\n        </div>\r\n        <!-- Show the following message if the password is not correct-->\r\n        <div class=\"alert alert-danger\" v-if=\"passwordNotFound\">\r\n                {{$t('Password is not correct!')}}\r\n        </div>\r\n        <!-- Login form -->\r\n        <div class=\"form-area\">\r\n            <!-- User Name -->\r\n            <div class=\"form-group\">\r\n            <label for=\"userName\">{{$t('User Name')}}</label>\r\n            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Ella')\" maxlength=\"14\" id= \"userName\" v-model=\"userName\" required>    \r\n            </div>\r\n            <!-- Password -->\r\n            <div class=\"form-group\">\r\n            <label for=\"password\">{{$t('Password')}}</label>\r\n            <input type=\"password\" class=\"form-control\" :placeholder=\"$t('e.g. Password')\" maxlength=\"14\" id= \"password\" v-model=\"password\" required>    \r\n            </div>\r\n            \r\n            <!-- Login button -->\r\n            <div class=\"form-item login\">\r\n                <button @click=\"login\">{{$t('Login')}}</button>\r\n            </div>\r\n            <!-- Forget password button -->\r\n            <div class=\"forget\">\r\n                <a href=\"#\" @click=\"forgetPassword\">{{$t('Forget Password')}}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data () {\r\n    return {\r\n        userNameNotFound: false,//true if the user is not found, else false\r\n        passwordNotFound: false,//true if the password is not found, else false\r\n        userName: '',//store the name of the user\r\n        password: '',//store the password of the user\r\n        loginBg: 'url('+require('@/assets/bg.jpg')+')'//store the backgroun image\r\n    }\r\n  },\r\n  methods: {\r\n    // login in method\r\n    // check the existence of the user before logging in\r\n    login(){\r\n        axios\r\n            .put(`checkLogin`, {\r\n                    name: this.userName,\r\n                    password: this.password\r\n                })\r\n                .then((response) => {\r\n                    if(response.data=='userNameNotFound'){\r\n                        this.userNameNotFound = true;\r\n                        this.passwordNotFound = false;\r\n                    }\r\n                    else if(response.data=='passwordNotFound'){\r\n                        this.userNameNotFound = false;\r\n                        this.passwordNotFound = true;\r\n                    }\r\n                    else{\r\n                        sessionStorage.setItem('username',this.userName)\r\n                        this.$router.push({path:'/master'})\r\n                    }\r\n                });\r\n    },\r\n    //go to the forget password page\r\n    forgetPassword(){\r\n        this.$router.push({path:'/forgetPassword'})\r\n    },\r\n    //change languagages between Chinese and English\r\n    translate(){\r\n        if(this.$i18n.locale == 'en')\r\n            this.$i18n.locale = 'ch'\r\n        else\r\n            this.$i18n.locale = 'en'\r\n    },\r\n  },\r\n  mounted () {\r\n    //Add a background image\r\n    document.body.style.backgroundSize = '100%'\r\n    document.body.style.backgroundImage = this.loginBg\r\n  },\r\n  beforeUnmount () {\r\n    // Clear the backgroun before going to another page\r\n    document.body.style.backgroundImage = ''\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}