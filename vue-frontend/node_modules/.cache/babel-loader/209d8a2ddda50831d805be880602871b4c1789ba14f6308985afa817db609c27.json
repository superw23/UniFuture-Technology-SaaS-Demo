{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row col-md-4 offset-md-4\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-success\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_6 = {\n  class: \"panel panel-primary\"\n};\nconst _hoisted_7 = {\n  class: \"panel-body\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  for: \"userName\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  for: \"password\",\n  class: \"form-label\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  for: \"newPassword1\",\n  class: \"form-label\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  for: \"newPassword2\",\n  class: \"form-label\"\n};\nconst _hoisted_16 = {\n  class: \"mt-3\"\n};\nconst _hoisted_17 = {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"panel-footer text-right\"\n}, [/*#__PURE__*/_createElementVNode(\"small\", null, \"© GRPTeam202205\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Change password page \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t('Change Password')), 1 /* TEXT */), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Show the following message if the password has been changed successfully\"), $data.isSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('Your password has been changed successfully!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if the user name or the password is not correct successfully\"), $data.notFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.$t('Your old password is not correct!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if two input passwords are not the same \"), $data.inConsistent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_ctx.$t('Two new passwords are not the same!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Change password form to collect info of the user \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.reset && $options.reset(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Input name of the user \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"label\", _hoisted_9, _toDisplayString(_ctx.$t('User Name')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"userName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userName = $event),\n    disabled: \"disabled\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userName]])]), _createCommentVNode(\" Input current password of the user \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('Current Password')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" Input new password of the user \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"label\", _hoisted_13, _toDisplayString(_ctx.$t('New Password')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"newPassword1\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newPassword1 = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword1]])]), _createCommentVNode(\" Input new password of the user again\"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"label\", _hoisted_15, _toDisplayString(_ctx.$t('New Password Again')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"newPassword2\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newPassword2 = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword2]])]), _createCommentVNode(\" Click the button to reset the new password \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", _hoisted_17, _toDisplayString(_ctx.$t('Reset New Password')), 1 /* TEXT */)])], 32 /* HYDRATE_EVENTS */)]), _hoisted_18])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAKQA,oBAAM;;EAEDC,KAAK,EAAC;AAA0B;;;EAE5BA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAqB;;EACvBA,KAAK,EAAC;AAAY;;EAGVA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC;AAAU;;EAIpBD,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;EAI3BA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC,cAAc;EAACD,KAAK,EAAC;;;EAI/BA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC,cAAc;EAACD,KAAK,EAAC;;;EAI/BA,KAAK,EAAC;AAAM;;EACLE,IAAI,EAAC,QAAQ;EAACF,KAAK,EAAC;;iCAMxCD,oBAEM;EAFDC,KAAK,EAAC;AAAyB,iBAC5BD,oBAAmC,eAA5B,iBAAoB;;;6DAnD/CI,6CAA6B,EAC7BJ,oBAsDM,cArDFA,oBAAkC,6BAA5BK,OAAE,qCACRC,UAAM,EAENN,oBAiDM,OAjDNO,UAiDM,GAhDFH,gGAAgF,EACzCI,eAAS,kBAAhDC,oBAEM,OAFNC,UAEM,mBADAL,OAAE,uGAERD,+GAA+F,EACzDI,cAAQ,kBAA9CC,oBAEM,OAFNE,UAEM,mBADAN,OAAE,4FAERD,2FAA2E,EACrCI,kBAAY,kBAAlDC,oBAEM,OAFNG,UAEM,mBADAP,OAAE,8FAERD,yEAAyD,EACzDJ,oBAkCM,OAlCNa,UAkCM,GAjCFb,oBA6BM,OA7BNc,UA6BM,GA5BFd,oBA2BO;IA3BAe,QAAM,wDAAUC,yCAAK;MACxBZ,+CAA+B,EAC/BJ,oBAGM,OAHNiB,UAGM,GAFFjB,oBAAiD,SAAjDkB,UAAiD,mBAAzBb,OAAE,+CAC1BL,oBAAuG;IAAhGG,IAAI,EAAC,MAAM;IAACF,KAAK,EAAC,cAAc;IAACkB,EAAE,EAAE,UAAU;+DAAUX,cAAQ;IAAEY,QAAQ,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA9Bb,cAAQ,OAE5EJ,2DAA2C,EAC3CJ,oBAGM,OAHNsB,WAGM,GAFFtB,oBAA2E,SAA3EuB,WAA2E,mBAAhClB,OAAE,sDAC7CL,oBAAuF;IAAhFG,IAAI,EAAC,UAAU;IAACF,KAAK,EAAC,cAAc;IAACkB,EAAE,EAAE,UAAU;+DAAUX,cAAQ;IAAEa,QAAQ,EAAR;iDAAVb,cAAQ,OAEhFJ,uDAAuC,EACvCJ,oBAGM,OAHNwB,WAGM,GAFFxB,oBAA2E,SAA3EyB,WAA2E,mBAA5BpB,OAAE,kDACjDL,oBAA+F;IAAxFG,IAAI,EAAC,UAAU;IAACF,KAAK,EAAC,cAAc;IAACkB,EAAE,EAAE,cAAc;+DAAUX,kBAAY;IAAEa,QAAQ,EAAR;iDAAdb,kBAAY,OAExFJ,4DAA4C,EAC5CJ,oBAGM,OAHN0B,WAGM,GAFF1B,oBAAiF,SAAjF2B,WAAiF,mBAAlCtB,OAAE,wDACjDL,oBAA+F;IAAxFG,IAAI,EAAC,UAAU;IAACF,KAAK,EAAC,cAAc;IAACkB,EAAE,EAAE,cAAc;+DAAUX,kBAAY;IAAEa,QAAQ,EAAR;iDAAdb,kBAAY,OAExFJ,mEAAmD,EACnDJ,oBAIM,OAJN4B,WAIM,GAHF5B,oBAES,UAFT6B,WAES,mBADHxB,OAAE,uEAKpByB,WAEM","names":["_createElementVNode","class","for","type","_createCommentVNode","_ctx","_hoisted_1","_hoisted_2","$data","_createElementBlock","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onSubmit","$options","_hoisted_8","_hoisted_9","id","disabled","required","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18"],"sourceRoot":"","sources":["C:\\Users\\SuperW\\Desktop\\暑期实习\\vue-frontend\\src\\components\\Others\\Settings\\ChangePassword.vue"],"sourcesContent":["// Made by GRPTeam202205\r\n<template>\r\n    <!-- Change password page -->\r\n    <div>\r\n        <h2>{{$t('Change Password')}}</h2>\r\n        <hr />\r\n\r\n        <div class=\"row col-md-4 offset-md-4\">\r\n            <!-- Show the following message if the password has been changed successfully-->\r\n            <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n                {{$t('Your password has been changed successfully!')}}\r\n            </div>\r\n            <!-- Show the following message if the user name or the password is not correct successfully-->\r\n            <div class=\"alert alert-danger\" v-if=\"notFound\">\r\n                {{$t('Your old password is not correct!')}}\r\n            </div>\r\n            <!-- Show the following message if two input passwords are not the same -->\r\n            <div class=\"alert alert-danger\" v-if=\"inConsistent\">\r\n                {{$t('Two new passwords are not the same!')}}\r\n            </div>\r\n            <!-- Change password form to collect info of the user -->\r\n            <div class=\"panel panel-primary\">\r\n                <div class=\"panel-body\">\r\n                    <form @submit.prevent=\"reset\">\r\n                        <!-- Input name of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"userName\">{{$t('User Name')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" id= \"userName\" v-model=\"userName\" disabled=\"disabled\" required>    \r\n                        </div>\r\n                        <!-- Input current password of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"password\" class=\"form-label\">{{$t('Current Password')}}</label>\r\n                            <input type=\"password\" class=\"form-control\" id= \"password\" v-model=\"password\" required>    \r\n                        </div>\r\n                        <!-- Input new password of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"newPassword1\" class=\"form-label\">{{$t('New Password')}}</label>\r\n                            <input type=\"password\" class=\"form-control\" id= \"newPassword1\" v-model=\"newPassword1\" required>    \r\n                        </div>\r\n                        <!-- Input new password of the user again-->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"newPassword2\" class=\"form-label\">{{$t('New Password Again')}}</label>\r\n                            <input type=\"password\" class=\"form-control\" id= \"newPassword2\" v-model=\"newPassword2\" required>    \r\n                        </div>\r\n                        <!-- Click the button to reset the new password -->\r\n                        <div class=\"mt-3\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                                {{$t('Reset New Password')}}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"panel-footer text-right\">\r\n                        <small>&copy; GRPTeam202205</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data() {\r\n        return {\r\n            userName: '',//store the name of the user\r\n            password: '',//store the password of the user\r\n            newPassword1: '',//store the new password1 of the user\r\n            newPassword2: '',//store the new password2 of the user\r\n            isSuccess: false,//true if the password is changed successfully, else false\r\n            notFound: false,//true if the user is not found, else false\r\n            inConsistent: false//true if the two new passwords are the same, else false\r\n        };\r\n    },\r\n    created(){\r\n        this.userName = sessionStorage.getItem('username')\r\n    },\r\n    methods: {\r\n        //reset the password of the user\r\n        reset() {\r\n            if(this.newPassword1!=this.newPassword2){\r\n                this.isSuccess = false;\r\n                this.notFound = false;\r\n                this.inConsistent = true;\r\n            }\r\n            else{\r\n                axios\r\n                .get('resetPassword', {params:{userName:this.userName,\r\n                    oldPassword: this.password,\r\n                    newPassword: this.newPassword1}\r\n                    \r\n                })\r\n                .then((response) => {\r\n                    if(response.data==''){\r\n                        this.isSuccess = false;\r\n                        this.notFound = true;\r\n                        this.inConsistent = false;\r\n                    }\r\n                    else{\r\n                        this.isSuccess = true;\r\n                        this.notFound = false;\r\n                        this.inConsistent = false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.box{\r\n    background-color: lightblue;\r\n    min-height: 50px;\r\n    width: 200px;\r\n    position: relative;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}