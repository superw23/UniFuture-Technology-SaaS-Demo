{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row col-md-4 offset-md-4\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-success\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_5 = {\n  class: \"panel panel-primary\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"panel-heading text-center\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"panel-body\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  for: \"userName\"\n};\nconst _hoisted_10 = [\"placeholder\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  for: \"type\",\n  class: \"form-label\"\n};\nconst _hoisted_14 = {\n  selected: \"\",\n  disabled: \"\",\n  value: \"\"\n};\nconst _hoisted_15 = {\n  class: \"row align-items-center\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"empty-row2\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"col-6\"\n};\nconst _hoisted_18 = {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n};\nconst _hoisted_19 = {\n  class: \"col-6\"\n};\nconst _hoisted_20 = {\n  type: \"button\",\n  class: \"btn btn-outline-primary\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Add customer page \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" Title of the page \"), _createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t('Create New User')), 1 /* TEXT */), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Show the following message if the user is to the database successfully\"), $data.isSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.$t('The user is added successfully!   The initial password is the same as the user name by default.')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.sameName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.$t('The name has already existed!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" User form to collect info of the user to be added \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.onCreatePost && $options.onCreatePost(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Input name of the user \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"label\", _hoisted_9, _toDisplayString(_ctx.$t('User Name')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: _ctx.$t('e.g. Sally'),\n    id: \"userName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userName = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.validateName && $options.validateName(...args)),\n    required: \"\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_10), [[_vModelText, $data.userName]]), $data.showError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString(_ctx.$t('Please input a valid user name')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Input role of the user \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"label\", _hoisted_13, _toDisplayString(_ctx.$t('Role')), 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n    class: \"form-select\",\n    \"aria-label\": \"Default select example\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.role = $event),\n    required: \"\"\n  }, [_createElementVNode(\"option\", _hoisted_14, _toDisplayString(_ctx.$t('Please choose a role')), 1 /* TEXT */), _createElementVNode(\"option\", null, _toDisplayString(_ctx.$t('Manager')), 1 /* TEXT */), _createElementVNode(\"option\", null, _toDisplayString(_ctx.$t('Influncer')), 1 /* TEXT */)], 512 /* NEED_PATCH */), [[_vModelSelect, $data.role]])]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" Click the button to submit the user form to the backend \"), _createElementVNode(\"button\", _hoisted_18, _toDisplayString(_ctx.$t('Add User')), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_router_link, {\n    to: {\n      name: 'User'\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", _hoisted_20, _toDisplayString(_ctx.$t('View User')), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  })])])], 32 /* HYDRATE_EVENTS */)])])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAMQA,oBAAM;;EAEDC,KAAK,EAAC;AAA0B;;;EAE5BA,KAAK,EAAC;;;;EAGNA,KAAK,EAAC;;;EAINA,KAAK,EAAC;AAAqB;gCAC5BD,oBAEM;EAFDC,KAAK,EAAC;AAA2B;;EAGjCA,KAAK,EAAC;AAAY;;EAGVA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC;AAAU;;;;EAECD,KAAK,EAAC;;;EAG3BA,KAAK,EAAC;AAAY;;EACZC,GAAG,EAAC,MAAM;EAACD,KAAK,EAAC;;;EAEZE,QAAQ,EAAR,EAAQ;EAACC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;;;EAKnCJ,KAAK,EAAC;AAAwB;iCAC/BD,oBAA8B;EAAzBC,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAO;;EAENK,IAAI,EAAC,QAAQ;EAACL,KAAK,EAAC;;;EAI3BA,KAAK,EAAC;AAAO;;EAC2BK,IAAI,EAAC,QAAQ;EAACL,KAAK,EAAC;;;;6DA7CzFM,0CAA0B,EAC1BP,oBAmDM,cAlDFO,0CAA0B,EAC1BP,oBAAkC,6BAA5BQ,OAAE,qCACRC,UAAM,EAENT,oBA6CM,OA7CNU,UA6CM,GA5CFH,8FAA8E,EACvCI,eAAS,kBAAhDC,oBAEM,OAFNC,UAEM,mBADAL,OAAE,0JAE8BG,cAAQ,kBAA9CC,oBAEM,OAFNE,UAEM,mBADAN,OAAE,wFAERD,0EAA0D,EAC1DP,oBAmCM,OAnCNe,UAmCM,GAlCFC,UAEM,EACNhB,oBA8BM,OA9BNiB,UA8BM,GA7BFjB,oBA4BO;IA5BAkB,QAAM,wDAAUC,uDAAY;MAC/BZ,+CAA+B,EAC/BP,oBAIM,OAJNoB,UAIM,GAHFpB,oBAAiD,SAAjDqB,UAAiD,mBAAzBb,OAAE,+CAC1BR,oBAAyI;IAAlIM,IAAI,EAAC,MAAM;IAACL,KAAK,EAAC,cAAc;IAAEqB,WAAW,EAAEd,OAAE;IAAgBe,EAAE,EAAE,UAAU;+DAAUZ,cAAQ;IAAGa,OAAK,yCAAEL,uDAAY;IAAEM,QAAQ,EAAR;wEAAhCd,cAAQ,KAC7FA,eAAS,kBAApBC,oBAA0F,OAA1Fc,WAA0F,mBAA7ClB,OAAE,2FAEnDD,+CAA+B,EAC/BP,oBAOM,OAPN2B,WAOM,GANF3B,oBAA2D,SAA3D4B,WAA2D,mBAApBpB,OAAE,0CACzCR,oBAIS;IAJDC,KAAK,EAAC,aAAa;IAAC,YAAU,EAAC,wBAAwB;+DAAUU,UAAI;IAAEc,QAAQ,EAAR;MAC3EzB,oBAA0E,UAA1E6B,WAA0E,mBAArCrB,OAAE,0CACvCR,oBAAkC,iCAAxBQ,OAAE,6BACZR,oBAAoC,iCAA1BQ,OAAE,wEAHyDG,UAAI,OAMjFX,oBAWM,OAXN8B,WAWM,GAVFC,WAA8B,EAC9B/B,oBAKM,OALNgC,WAKM,GAJFzB,gFAAgE,EAChEP,oBAES,UAFTiC,WAES,mBADHzB,OAAE,gCAGZR,oBAEM,OAFNkC,WAEM,GADFC,aAAiIC;IAAnHC,EAAE,EAAE;MAAAC;IAAA;EAAa;sBAAE,MAAkF,CAAlFtC,oBAAkF,UAAlFuC,WAAkF,mBAA1B/B,OAAE","names":["_createElementVNode","class","for","selected","disabled","value","type","_createCommentVNode","_ctx","_hoisted_1","_hoisted_2","$data","_createElementBlock","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","onSubmit","$options","_hoisted_8","_hoisted_9","placeholder","id","onInput","required","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_createVNode","_component_router_link","to","name","_hoisted_20"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Others\\User\\AddUser.vue"],"sourcesContent":["//Made by GRPTeam202205\r\n<template>\r\n    <!-- Add customer page -->\r\n    <div>\r\n        <!-- Title of the page -->\r\n        <h2>{{$t('Create New User')}}</h2>\r\n        <hr />\r\n\r\n        <div class=\"row col-md-4 offset-md-4\">\r\n            <!-- Show the following message if the user is to the database successfully-->\r\n            <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n                {{$t('The user is added successfully!   The initial password is the same as the user name by default.')}}\r\n            </div>\r\n            <div class=\"alert alert-danger\" v-if=\"sameName\">\r\n                {{$t('The name has already existed!')}}\r\n            </div>\r\n            <!-- User form to collect info of the user to be added -->\r\n            <div class=\"panel panel-primary\">\r\n                <div class=\"panel-heading text-center\">\r\n\r\n                </div>\r\n                <div class=\"panel-body\">\r\n                    <form @submit.prevent=\"onCreatePost\">\r\n                        <!-- Input name of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"userName\">{{$t('User Name')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Sally')\" id= \"userName\" v-model=\"userName\" @input=\"validateName\" required>\r\n                            <div v-if=\"showError\" class=\"text-danger\">{{ $t('Please input a valid user name') }}</div>\r\n                        </div>\r\n                        <!-- Input role of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"type\" class=\"form-label\">{{$t('Role')}}</label>\r\n                            <select class=\"form-select\" aria-label=\"Default select example\" v-model=\"role\" required>\r\n                                <option selected disabled value=\"\">{{$t('Please choose a role')}}</option>\r\n                                <option>{{$t('Manager')}}</option>\r\n                                <option>{{$t('Influncer')}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"empty-row2\"></div>\r\n                            <div class=\"col-6\">\r\n                                <!-- Click the button to submit the user form to the backend -->\r\n                                <button type=\"submit\" class=\"btn btn-primary\">\r\n                                    {{$t('Add User')}}\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <router-link :to=\"{name:'User'}\"><button type=\"button\" class=\"btn btn-outline-primary\">{{$t('View User')}}</button></router-link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    data() {\r\n        return {\r\n            userName: '',//store the name of the user\r\n            role: '',//store the role of the customer\r\n            sameName: false,//true if the user name exists, else false\r\n            isSuccess: false,//true if the user is added successfully, else false\r\n            showError: false,\r\n        };\r\n    },\r\n    methods: {\r\n        // add a new user\r\n        // pass the user information to the backend\r\n        onCreatePost() {\r\n            if (this.showError) {\r\n                alert('Please correct the errors before submitting.');\r\n                return;\r\n            }\r\n            axios\r\n                .post(`addUser`, {\r\n                    name: this.userName,\r\n                    role: this.role\r\n                })\r\n                .then((response) => {\r\n                    if(response.data==\"\") {\r\n                        this.sameName = true;\r\n                        this.isSuccess = false;\r\n                    }\r\n                    else {\r\n                        this.sameName = false;\r\n                        this.isSuccess = true;\r\n                        this.userName = '',\r\n                        this.role = ''\r\n                    }\r\n                });\r\n        },\r\n        //Check if the input user name is valid\r\n        validateName() {\r\n            // Regular expression for letters only validation\r\n            const lettersRegex = /^[A-Za-z\\s]+$/;\r\n\r\n            // Check if the input is a valid name\r\n            if (!lettersRegex.test(this.userName)) {\r\n               // Show the error message\r\n               this.showError = true;\r\n            } else {\r\n               // Hide the error message\r\n               this.showError = false;\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}