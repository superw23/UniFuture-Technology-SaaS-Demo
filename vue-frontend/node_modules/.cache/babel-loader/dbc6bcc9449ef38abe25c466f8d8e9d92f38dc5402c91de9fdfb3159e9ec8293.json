{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userNameNotFound: false,\n      //true if the user is not found, else false\n      passwordNotFound: false,\n      //true if the password is not found, else false\n      userName: '',\n      //store the name of the user\n      password: '',\n      //store the password of the user\n      loginBg: 'url(' + require('@/assets/bg.jpg') + ')' //store the backgroun image\n    };\n  },\n\n  methods: {\n    // login in method\n    // check the existence of the user before logging in\n    login() {\n      axios.put(`checkLogin`, {\n        姓名: this.userName,\n        密码: this.password\n      }).then(response => {\n        if (response.data == 'userNameNotFound') {\n          this.userNameNotFound = true;\n          this.passwordNotFound = false;\n        } else if (response.data == 'passwordNotFound') {\n          this.userNameNotFound = false;\n          this.passwordNotFound = true;\n        } else {\n          sessionStorage.setItem('username', this.userName);\n          this.$router.push({\n            path: '/master'\n          });\n        }\n      });\n    },\n    //go to the forget password page\n    forgetPassword() {\n      this.$router.push({\n        path: '/forgetPassword'\n      });\n    },\n    //change languagages between Chinese and English\n    translate() {\n      if (this.$i18n.locale == 'en') this.$i18n.locale = 'ch';else this.$i18n.locale = 'en';\n    }\n  },\n  mounted() {\n    //Add a background image\n    document.body.style.backgroundSize = '100%';\n    document.body.style.backgroundImage = this.loginBg;\n  },\n  beforeUnmount() {\n    // Clear the backgroun before going to another page\n    document.body.style.backgroundImage = '';\n  }\n};","map":{"version":3,"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACHC,gBAAgB,EAAE,KAAK;MAAC;MACxBC,gBAAgB,EAAE,KAAK;MAAC;MACxBC,QAAQ,EAAE,EAAE;MAAC;MACbC,QAAQ,EAAE,EAAE;MAAC;MACbC,OAAO,EAAE,MAAM,GAACC,OAAO,CAAC,iBAAiB,CAAC,GAAC,GAAG;IAClD;EACF,CAAC;;EACDC,OAAO,EAAE;IACP;IACA;IACAC,KAAK,GAAE;MACHT,KAAI,CACCU,GAAG,CAAE,YAAW,EAAE;QACXC,EAAC,EAAI,IAAI,CAACP,QAAQ;QAClBQ,EAAE,EAAE,IAAI,CAACP;MACb,CAAC,EACAQ,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAGA,QAAQ,CAACb,IAAI,IAAE,kBAAkB,EAAC;UACjC,IAAI,CAACC,gBAAe,GAAI,IAAI;UAC5B,IAAI,CAACC,gBAAe,GAAI,KAAK;QACjC,OACK,IAAGW,QAAQ,CAACb,IAAI,IAAE,kBAAkB,EAAC;UACtC,IAAI,CAACC,gBAAe,GAAI,KAAK;UAC7B,IAAI,CAACC,gBAAe,GAAI,IAAI;QAChC,OACI;UACAY,cAAc,CAACC,OAAO,CAAC,UAAU,EAAC,IAAI,CAACZ,QAAQ;UAC/C,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC;YAACC,IAAI,EAAC;UAAS,CAAC;QACtC;MACJ,CAAC,CAAC;IACd,CAAC;IACD;IACAC,cAAc,GAAE;MACZ,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC;QAACC,IAAI,EAAC;MAAiB,CAAC;IAC9C,CAAC;IACD;IACAE,SAAS,GAAE;MACP,IAAG,IAAI,CAACC,KAAK,CAACC,MAAK,IAAK,IAAI,EACxB,IAAI,CAACD,KAAK,CAACC,MAAK,GAAI,IAAG,MAEvB,IAAI,CAACD,KAAK,CAACC,MAAK,GAAI,IAAG;IAC/B;EACF,CAAC;EACDC,OAAM,GAAK;IACT;IACAC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,cAAa,GAAI,MAAK;IAC1CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAc,GAAI,IAAI,CAACvB,OAAM;EACnD,CAAC;EACDwB,aAAY,GAAK;IACf;IACAL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAc,GAAI,EAAC;EACzC;AACF","names":["axios","data","userNameNotFound","passwordNotFound","userName","password","loginBg","require","methods","login","put","姓名","密码","then","response","sessionStorage","setItem","$router","push","path","forgetPassword","translate","$i18n","locale","mounted","document","body","style","backgroundSize","backgroundImage","beforeUnmount"],"sourceRoot":"","sources":["C:\\Users\\SuperW\\Desktop\\暑期实习\\vue-frontend\\src\\components\\Login\\Login.vue"],"sourcesContent":["//Made by GRPTeam202205\r\n<template>\r\n    <div class=\"form\">\r\n        <!-- Login in title -->\r\n        <h2>\r\n            <span>   {{$t('CloudWalker')}}  </span>\r\n            <i class=\"fa fa-language\" type=\"button\" @click=\"translate\"></i>\r\n        </h2>\r\n        <!-- Show the following message if the user is not found-->\r\n        <div class=\"alert alert-danger\" v-if=\"userNameNotFound\">\r\n                {{$t('User Name does not exist!')}}\r\n        </div>\r\n        <!-- Show the following message if the password is not correct-->\r\n        <div class=\"alert alert-danger\" v-if=\"passwordNotFound\">\r\n                {{$t('Password is not correct!')}}\r\n        </div>\r\n        <!-- Login form -->\r\n        <div class=\"form-area\">\r\n            <!-- User Name -->\r\n            <div class=\"form-group\">\r\n            <label for=\"userName\">{{$t('User Name')}}</label>\r\n            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Ella')\" maxlength=\"14\" id= \"userName\" v-model=\"userName\" required>    \r\n            </div>\r\n            <!-- Password -->\r\n            <div class=\"form-group\">\r\n            <label for=\"password\">{{$t('Password')}}</label>\r\n            <input type=\"password\" class=\"form-control\" :placeholder=\"$t('e.g. Password')\" maxlength=\"14\" id= \"password\" v-model=\"password\" required>    \r\n            </div>\r\n            \r\n            <!-- Login button -->\r\n            <div class=\"form-item login\">\r\n                <button @click=\"login\">{{$t('Login')}}</button>\r\n            </div>\r\n            <!-- Forget password button -->\r\n            <div class=\"forget\">\r\n                <a href=\"#\" @click=\"forgetPassword\">{{$t('Forget Password')}}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data () {\r\n    return {\r\n        userNameNotFound: false,//true if the user is not found, else false\r\n        passwordNotFound: false,//true if the password is not found, else false\r\n        userName: '',//store the name of the user\r\n        password: '',//store the password of the user\r\n        loginBg: 'url('+require('@/assets/bg.jpg')+')'//store the backgroun image\r\n    }\r\n  },\r\n  methods: {\r\n    // login in method\r\n    // check the existence of the user before logging in\r\n    login(){\r\n        axios\r\n            .put(`checkLogin`, {\r\n                    姓名 : this.userName,\r\n                    密码: this.password\r\n                })\r\n                .then((response) => {\r\n                    if(response.data=='userNameNotFound'){\r\n                        this.userNameNotFound = true;\r\n                        this.passwordNotFound = false;\r\n                    }\r\n                    else if(response.data=='passwordNotFound'){\r\n                        this.userNameNotFound = false;\r\n                        this.passwordNotFound = true;\r\n                    }\r\n                    else{\r\n                        sessionStorage.setItem('username',this.userName)\r\n                        this.$router.push({path:'/master'})\r\n                    }\r\n                });\r\n    },\r\n    //go to the forget password page\r\n    forgetPassword(){\r\n        this.$router.push({path:'/forgetPassword'})\r\n    },\r\n    //change languagages between Chinese and English\r\n    translate(){\r\n        if(this.$i18n.locale == 'en')\r\n            this.$i18n.locale = 'ch'\r\n        else\r\n            this.$i18n.locale = 'en'\r\n    },\r\n  },\r\n  mounted () {\r\n    //Add a background image\r\n    document.body.style.backgroundSize = '100%'\r\n    document.body.style.backgroundImage = this.loginBg\r\n  },\r\n  beforeUnmount () {\r\n    // Clear the backgroun before going to another page\r\n    document.body.style.backgroundImage = ''\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}