{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: '',\n      //store the name of the user\n      role: '',\n      //store the role of the customer\n      email: '',\n      platform: '',\n      sameName: false,\n      //true if the user name exists, else false\n      isSuccess: false,\n      //true if the user is added successfully, else false\n      showError: false\n    };\n  },\n  methods: {\n    // add a new user\n    // pass the user information to the backend\n    onCreatePost() {\n      if (this.showError) {\n        alert('Please correct the errors before submitting.');\n        return;\n      }\n      axios.post(`addUser`, {\n        name: this.userName,\n        role: this.role\n      }).then(response => {\n        if (response.data == \"\") {\n          this.sameName = true;\n          this.isSuccess = false;\n        } else {\n          this.sameName = false;\n          this.isSuccess = true;\n          this.userName = '', this.role = '';\n        }\n      });\n    },\n    //Check if the input user name is valid\n    validateName() {\n      // Regular expression for letters only validation\n      const lettersRegex = /^[A-Za-z\\s]+$/;\n\n      // Check if the input is a valid name\n      if (!lettersRegex.test(this.userName)) {\n        // Show the error message\n        this.showError = true;\n      } else {\n        // Hide the error message\n        this.showError = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAwEA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MAAC;MACbC,IAAI,EAAE,EAAE;MAAC;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,KAAK;MAAC;MAChBC,SAAS,EAAE,KAAK;MAAC;MACjBC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACAC,YAAY,GAAG;MACX,IAAI,IAAI,CAACF,SAAS,EAAE;QAChBG,KAAK,CAAC,8CAA8C,CAAC;QACrD;MACJ;MACAX,KAAI,CACCY,IAAI,CAAE,SAAQ,EAAE;QACbC,IAAI,EAAE,IAAI,CAACX,QAAQ;QACnBC,IAAI,EAAE,IAAI,CAACA;MACf,CAAC,EACAW,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAGA,QAAQ,CAACd,IAAI,IAAE,EAAE,EAAE;UAClB,IAAI,CAACK,QAAO,GAAI,IAAI;UACpB,IAAI,CAACC,SAAQ,GAAI,KAAK;QAC1B,OACK;UACD,IAAI,CAACD,QAAO,GAAI,KAAK;UACrB,IAAI,CAACC,SAAQ,GAAI,IAAI;UACrB,IAAI,CAACL,QAAO,GAAI,EAAE,EAClB,IAAI,CAACC,IAAG,GAAI,EAAC;QACjB;MACJ,CAAC,CAAC;IACV,CAAC;IACD;IACAa,YAAY,GAAG;MACX;MACA,MAAMC,YAAW,GAAI,eAAe;;MAEpC;MACA,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAChB,QAAQ,CAAC,EAAE;QACpC;QACA,IAAI,CAACM,SAAQ,GAAI,IAAI;MACxB,OAAO;QACJ;QACA,IAAI,CAACA,SAAQ,GAAI,KAAK;MACzB;IACJ;EACJ;AACJ,CAAC","names":["axios","data","userName","role","email","platform","sameName","isSuccess","showError","methods","onCreatePost","alert","post","name","then","response","validateName","lettersRegex","test"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Others\\User\\AddUser.vue"],"sourcesContent":["//Made by GRPTeam202205\r\n<template>\r\n    <!-- Add customer page -->\r\n    <div>\r\n        <!-- Title of the page -->\r\n        <h2>{{$t('Create New User')}}</h2>\r\n        <hr />\r\n\r\n        <div class=\"row col-md-4 offset-md-4\">\r\n            <!-- Show the following message if the user is to the database successfully-->\r\n            <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n                {{$t('The user is added successfully!   The initial password is the same as the user name by default.')}}\r\n            </div>\r\n            <div class=\"alert alert-danger\" v-if=\"sameName\">\r\n                {{$t('The name has already existed!')}}\r\n            </div>\r\n            <!-- User form to collect info of the user to be added -->\r\n            <div class=\"panel panel-primary\">\r\n                <div class=\"panel-heading text-center\">\r\n\r\n                </div>\r\n                <div class=\"panel-body\">\r\n                    <form @submit.prevent=\"onCreatePost\">\r\n                        <!-- Input name of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"userName\">{{$t('User Name')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Sally')\" id= \"userName\" v-model=\"userName\" @input=\"validateName\" required>\r\n                            <div v-if=\"showError\" class=\"text-danger\">{{ $t('Please input a valid user name') }}</div>\r\n                        </div>\r\n                        <!-- Input email of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"userName\">{{$t('Email')}}</label>\r\n                            <input type=\"text\" class=\"form-control\" :placeholder=\"$t('e.g. Sally@gmail.com')\" id= \"email\" v-model=\"email\" required>\r\n                        </div>\r\n                        <!-- Input role of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"type\" class=\"form-label\">{{$t('Role')}}</label>\r\n                            <select class=\"form-select\" aria-label=\"Default select example\" v-model=\"role\" required>\r\n                                <option selected disabled value=\"\">{{$t('Please choose a role')}}</option>\r\n                                <option>{{$t('Manager')}}</option>\r\n                                <option>{{$t('Influncer')}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <!-- Input role of the user -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"type\" class=\"form-label\">{{$t('Platform')}}</label>\r\n                            <select class=\"form-select\" aria-label=\"Default select example\" v-model=\"platform\" required>\r\n                                <option selected disabled value=\"\">{{$t('Please choose a platform')}}</option>\r\n                                <option>{{$t('Bilibili')}}</option>\r\n                                <option>{{$t('Tiktok')}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"empty-row2\"></div>\r\n                            <div class=\"col-6\">\r\n                                <!-- Click the button to submit the user form to the backend -->\r\n                                <button type=\"submit\" class=\"btn btn-primary\">\r\n                                    {{$t('Add User')}}\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <router-link :to=\"{name:'User'}\"><button type=\"button\" class=\"btn btn-outline-primary\">{{$t('View User')}}</button></router-link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    data() {\r\n        return {\r\n            userName: '',//store the name of the user\r\n            role: '',//store the role of the customer\r\n            email: '',\r\n            platform: '',\r\n            sameName: false,//true if the user name exists, else false\r\n            isSuccess: false,//true if the user is added successfully, else false\r\n            showError: false,\r\n        };\r\n    },\r\n    methods: {\r\n        // add a new user\r\n        // pass the user information to the backend\r\n        onCreatePost() {\r\n            if (this.showError) {\r\n                alert('Please correct the errors before submitting.');\r\n                return;\r\n            }\r\n            axios\r\n                .post(`addUser`, {\r\n                    name: this.userName,\r\n                    role: this.role\r\n                })\r\n                .then((response) => {\r\n                    if(response.data==\"\") {\r\n                        this.sameName = true;\r\n                        this.isSuccess = false;\r\n                    }\r\n                    else {\r\n                        this.sameName = false;\r\n                        this.isSuccess = true;\r\n                        this.userName = '',\r\n                        this.role = ''\r\n                    }\r\n                });\r\n        },\r\n        //Check if the input user name is valid\r\n        validateName() {\r\n            // Regular expression for letters only validation\r\n            const lettersRegex = /^[A-Za-z\\s]+$/;\r\n\r\n            // Check if the input is a valid name\r\n            if (!lettersRegex.test(this.userName)) {\r\n               // Show the error message\r\n               this.showError = true;\r\n            } else {\r\n               // Hide the error message\r\n               this.showError = false;\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}