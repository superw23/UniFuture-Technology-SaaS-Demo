{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal fade\",\n  id: \"exampleModal\",\n  ref: \"customerModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exampleModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_2 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_3 = {\n  class: \"modal-content\"\n};\nconst _hoisted_4 = {\n  class: \"modal-header\"\n};\nconst _hoisted_5 = {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"modal-body\"\n};\nconst _hoisted_10 = {\n  class: \"mb-3\"\n};\nconst _hoisted_11 = {\n  for: \"id\",\n  class: \"col-form-label\"\n};\nconst _hoisted_12 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"id\",\n  ref: \"id\",\n  value: \"\",\n  disabled: \"disabled\"\n};\nconst _hoisted_13 = {\n  class: \"mb-3\"\n};\nconst _hoisted_14 = {\n  for: \"name\",\n  class: \"col-form-label\"\n};\nconst _hoisted_15 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"name\",\n  ref: \"name\",\n  value: \"\"\n};\nconst _hoisted_16 = {\n  class: \"mb-3\"\n};\nconst _hoisted_17 = {\n  for: \"address\",\n  class: \"col-form-label\"\n};\nconst _hoisted_18 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"address\",\n  ref: \"address\",\n  value: \"\"\n};\nconst _hoisted_19 = {\n  class: \"mb-3\"\n};\nconst _hoisted_20 = {\n  for: \"phoneNumber\",\n  class: \"col-form-label\"\n};\nconst _hoisted_21 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"phoneNumber\",\n  ref: \"phoneNumber\",\n  value: \"\"\n};\nconst _hoisted_22 = {\n  class: \"mb-3\"\n};\nconst _hoisted_23 = {\n  for: \"contact\",\n  class: \"col-form-label\"\n};\nconst _hoisted_24 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"contact\",\n  ref: \"contact\",\n  value: \"\"\n};\nconst _hoisted_25 = {\n  class: \"mb-3\"\n};\nconst _hoisted_26 = {\n  for: \"remarks\",\n  class: \"col-form-label\"\n};\nconst _hoisted_27 = {\n  type: \"text\",\n  class: \"form-control\",\n  id: \"remarks\",\n  ref: \"remarks\",\n  value: \"\"\n};\nconst _hoisted_28 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_29 = {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n};\nconst _hoisted_30 = {\n  class: \"navbar\"\n};\nconst _hoisted_31 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_32 = {\n  class: \"dropdown\"\n};\nconst _hoisted_33 = {\n  class: \"btn dropdown-toggle\",\n  type: \"button\",\n  id: \"dropdownMenu2\",\n  \"data-bs-toggle\": \"dropdown\",\n  \"aria-expanded\": \"false\"\n};\nconst _hoisted_34 = {\n  class: \"dropdown-menu\",\n  \"aria-labelledby\": \"dropdownMenu2\"\n};\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-brand\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_36 = {\n  class: \"d-flex\",\n  role: \"search\"\n};\nconst _hoisted_37 = [\"placeholder\"];\nconst _hoisted_38 = {\n  class: \"btn btn-outline-success\",\n  type: \"submit\"\n};\nconst _hoisted_39 = {\n  class: \"container\"\n};\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa fa-cart-plus\",\n  style: {\n    \"font-size\": \"42px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_42 = {\n  key: 0,\n  class: \"alert alert-success\"\n};\nconst _hoisted_43 = {\n  key: 1,\n  class: \"alert alert-success\"\n};\nconst _hoisted_44 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_45 = {\n  class: \"table table-stripped\"\n};\nconst _hoisted_46 = {\n  class: \"modal fade\",\n  id: \"onDelete\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"onDeleteLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_47 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_48 = {\n  class: \"modal-content\"\n};\nconst _hoisted_49 = {\n  class: \"modal-header\"\n};\nconst _hoisted_50 = {\n  class: \"modal-title\",\n  id: \"onDelete\"\n};\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_52 = {\n  class: \"modal-body\"\n};\nconst _hoisted_53 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_54 = {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n};\nconst _hoisted_55 = {\n  class: \"navbar\"\n};\nconst _hoisted_56 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_57 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"navbar-brand\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_58 = {\n  \"aria-label\": \"Page navigation example\"\n};\nconst _hoisted_59 = {\n  class: \"pagination\"\n};\nconst _hoisted_60 = {\n  class: \"page-item\"\n};\nconst _hoisted_61 = {\n  class: \"page-item\"\n};\nconst _hoisted_62 = {\n  class: \"page-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_fa = _resolveComponent(\"fa\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Customer list page \"), _createCommentVNode(\" Show the modal dialog box in order to change info of existing customer  \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Title of the modal dialog box \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", _hoisted_5, [$data.editing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(_ctx.$t('Customer.Edit Customer')), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString(_ctx.$t('Customer.Add New Customer')), 1 /* TEXT */))]), _hoisted_8]), _createCommentVNode(\" Body of the modal dialog box consists of information of a chosen customer \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"form\", null, [_createCommentVNode(\" ID of the customer cannot be changed \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('ID')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_12, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Name of the customer can be changed \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"label\", _hoisted_14, _toDisplayString(_ctx.$t('Name')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_15, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Address of the customer can be changed \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"label\", _hoisted_17, _toDisplayString(_ctx.$t('Address')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_18, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Phone number of the customer can be changed \"), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"label\", _hoisted_20, _toDisplayString(_ctx.$t('Phone Number')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_21, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Contact person of the customer can be changed \"), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"label\", _hoisted_23, _toDisplayString(_ctx.$t('Contact')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_24, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Additional information of the customer can be changed \"), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"label\", _hoisted_26, _toDisplayString(_ctx.$t('Remarks')) + \":\", 1 /* TEXT */), _createElementVNode(\"input\", _hoisted_27, null, 512 /* NEED_PATCH */)])])]), _createElementVNode(\"div\", _hoisted_28, [_createCommentVNode(\" Click the button to close the current modal dialog box \"), _createElementVNode(\"button\", _hoisted_29, _toDisplayString(_ctx.$t('Close')), 1 /* TEXT */), _createCommentVNode(\" Click the button to submit the changed customer information \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    \"data-bs-dismiss\": \"modal\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.updateCustomer())\n  }, _toDisplayString(_ctx.$t('Send')), 1 /* TEXT */)])])])], 512 /* NEED_PATCH */), _createCommentVNode(\" Search bar by searching the name of the customer \"), _createElementVNode(\"nav\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createCommentVNode(\"Drop-down menu to choose the number of customers per page\"), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"button\", _hoisted_33, _toDisplayString(_ctx.$t('Records Per Page')), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_34, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.changeCustomerPerPage(5))\n  }, \"5\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.changeCustomerPerPage(10))\n  }, \"10\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    class: \"dropdown-item\",\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.changeCustomerPerPage(15))\n  }, \"15\")])])]), _hoisted_35, _createElementVNode(\"form\", _hoisted_36, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control me-2\",\n    type: \"search\",\n    placeholder: _ctx.$t('Search'),\n    \"aria-label\": \"Search\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.search = $event)\n  }, null, 8 /* PROPS */, _hoisted_37), [[_vModelText, $data.search]]), _createElementVNode(\"button\", _hoisted_38, _toDisplayString(_ctx.$t('Search')), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_39, [_createElementVNode(\"h1\", null, [_createTextVNode(_toDisplayString(_ctx.$t('Customer.Customers List')) + \" \", 1 /* TEXT */), _createCommentVNode(\" Click the button to go to add customer page \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'AddCustomer'\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_40]),\n    _: 1 /* STABLE */\n  })]), _hoisted_41, _createCommentVNode(\" Show the following message if the customer is deleted successfully\"), $data.isSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_42, _toDisplayString(_ctx.$t('Customer.The customer is deleted successfully!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Show the following message if the customer is edited successfully\"), $data.isEdited ? (_openBlock(), _createElementBlock(\"div\", _hoisted_43, _toDisplayString(_ctx.$t('Customer.The customer is edited successfully!')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Customer table to show existing customers in the database \"), _createElementVNode(\"div\", _hoisted_44, [_createElementVNode(\"table\", _hoisted_45, [_createElementVNode(\"thead\", null, [_createCommentVNode(\" ID of the customer \"), _createElementVNode(\"th\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-sort-numeric-asc\",\n    type: \"button\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.sort('id'))\n  }), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('Customer ID')), 1 /* TEXT */)]), _createCommentVNode(\" Name of the customer \"), _createElementVNode(\"th\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-sort-alpha-asc\",\n    type: \"button\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.sort('name'))\n  }), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('Name')), 1 /* TEXT */)]), _createCommentVNode(\" Address of the customer \"), _createElementVNode(\"th\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-sort-alpha-asc\",\n    type: \"button\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.sort('address'))\n  }), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('Address')), 1 /* TEXT */)]), _createCommentVNode(\" Email of the customer \"), _createElementVNode(\"th\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-sort-alpha-asc\",\n    type: \"button\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[8] || (_cache[8] = $event => $options.sort('contact'))\n  }), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('Email')), 1 /* TEXT */)]), _createCommentVNode(\" Phone number of the customer \"), _createElementVNode(\"th\", null, [_createElementVNode(\"i\", {\n    class: \"fa fa-sort-alpha-asc\",\n    type: \"button\",\n    \"aria-hidden\": \"true\",\n    onClick: _cache[9] || (_cache[9] = $event => $options.sort('phoneNumber'))\n  }), _createTextVNode(\" \" + _toDisplayString(_ctx.$t('Phone Number')), 1 /* TEXT */)]), _createCommentVNode(\" Edit information of the customer \"), _createElementVNode(\"th\", null, _toDisplayString(_ctx.$t('Edit')), 1 /* TEXT */)]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredCustomers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer.id,\n      class: \"table-bordered\"\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.address), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.contact), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.phoneNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_46, [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"h5\", _hoisted_50, _toDisplayString(_ctx.$t('CONFIRM')), 1 /* TEXT */), _hoisted_51]), _createElementVNode(\"div\", _hoisted_52, _toDisplayString(_ctx.$t('Are your sure to delete the customer?')), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"button\", _hoisted_54, _toDisplayString(_ctx.$t('No')), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-bs-dismiss\": \"modal\",\n      onClick: _cache[10] || (_cache[10] = $event => $options.deleteCustomer(this.customerId))\n    }, _toDisplayString(_ctx.$t('Yes')), 1 /* TEXT */)])])])]), _createVNode(_component_fa, {\n      icon: \"trash\",\n      type: \"button\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#onDelete\",\n      onClick: $event => $options.getCustomerId(customer.id)\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createTextVNode(\"  \"), _createVNode(_component_fa, {\n      icon: \"edit\",\n      type: \"button\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      \"data-bs-whatever\": \"@mdo\",\n      onClick: $event => $options.passCustomer(customer)\n    }, null, 8 /* PROPS */, [\"onClick\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" Show the total number of customers \"), _createElementVNode(\"h5\", null, _toDisplayString(_ctx.$t('Customer.Total customers')) + \": \" + _toDisplayString($options.total), 1 /* TEXT */), _createCommentVNode(\" Download PDF format of the customer table \"), _createElementVNode(\"img\", {\n    src: \"/static/Others/pdf.png\",\n    width: \"38\",\n    height: \"35\",\n    type: \"button\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.downloadPDF && $options.downloadPDF(...args))\n  }), _createTextVNode(\"   \"), _createElementVNode(\"img\", {\n    src: \"/static/Others/xlsx.png\",\n    width: \"35\",\n    height: \"35\",\n    type: \"button\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.downloadExcel && $options.downloadExcel(...args))\n  })]), _createCommentVNode(\"Page navigation bar\"), _createElementVNode(\"nav\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_createElementVNode(\"h5\", null, \"Total Pages: \" + _toDisplayString(this.totalPages), 1 /* TEXT */), _hoisted_57, _createElementVNode(\"nav\", _hoisted_58, [_createElementVNode(\"ul\", _hoisted_59, [_createElementVNode(\"li\", _hoisted_60, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[13] || (_cache[13] = $event => $options.pagination(this.pageNum - 1))\n  }, _toDisplayString(_ctx.$t('Previous')), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_61, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[14] || (_cache[14] = $event => $options.pagination(0))\n  }, _toDisplayString(this.pageNum + 1), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_62, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[15] || (_cache[15] = $event => $options.pagination($data.pageNum + 1))\n  }, _toDisplayString(_ctx.$t('Next')), 1 /* TEXT */)])])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["class","id","ref","tabindex","_createElementVNode","type","for","value","disabled","role","style","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","$data","_createElementBlock","_ctx","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","onClick","$options","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","placeholder","_hoisted_38","_hoisted_39","_createVNode","_component_router_link","to","name","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_Fragment","customer","key","address","contact","phoneNumber","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","customerId","_component_fa","icon","src","width","height","_hoisted_55","_hoisted_56","totalPages","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","href","pageNum","_hoisted_61","_hoisted_62"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Sales\\Customer\\Customer.vue"],"sourcesContent":["// Made by GRPTeam202205\n<template>\n  <!-- Customer list page -->\n  <!-- Show the modal dialog box in order to change info of existing customer  -->\n  <div class=\"modal fade\" id=\"exampleModal\" ref=\"customerModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <!-- Title of the modal dialog box -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">\n            <span v-if=\"editing\">{{$t('Customer.Edit Customer')}}</span>\n            <span v-else>{{$t('Customer.Add New Customer')}}</span>\n          </h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <!-- Body of the modal dialog box consists of information of a chosen customer -->\n        <div class=\"modal-body\">\n          <form>\n            <!-- ID of the customer cannot be changed -->\n            <div class=\"mb-3\">\n              <label for=\"id\" class=\"col-form-label\">{{$t('ID')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"id\" ref=\"id\" value=\"\" disabled=\"disabled\">\n            </div>\n            <!-- Name of the customer can be changed -->\n            <div class=\"mb-3\">\n              <label for=\"name\" class=\"col-form-label\">{{$t('Name')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"name\" ref=\"name\" value=\"\">\n            </div>\n            <!-- Address of the customer can be changed -->\n            <div class=\"mb-3\">\n              <label for=\"address\" class=\"col-form-label\">{{$t('Address')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"address\" ref=\"address\" value=\"\">\n            </div>\n            <!-- Phone number of the customer can be changed -->\n            <div class=\"mb-3\">\n              <label for=\"phoneNumber\" class=\"col-form-label\">{{$t('Phone Number')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" ref=\"phoneNumber\" value=\"\">\n            </div>\n            <!-- Contact person of the customer can be changed -->\n            <div class=\"mb-3\">\n              <label for=\"contact\" class=\"col-form-label\">{{$t('Contact')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"contact\" ref=\"contact\" value=\"\">\n            </div>\n            <!-- Additional information of the customer can be changed -->\n            <div class=\"mb-3\">\n              <label for=\"remarks\" class=\"col-form-label\">{{$t('Remarks')}}:</label>\n              <input type=\"text\" class=\"form-control\" id=\"remarks\" ref=\"remarks\" value=\"\">\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <!-- Click the button to close the current modal dialog box -->\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">{{$t('Close')}}</button>\n          <!-- Click the button to submit the changed customer information -->\n          <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"updateCustomer()\">{{$t('Send')}}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Search bar by searching the name of the customer -->\n  <nav class=\"navbar\">\n    <div class=\"container-fluid\">\n      <!--Drop-down menu to choose the number of customers per page-->\n      <div class=\"dropdown\">\n        <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          {{$t('Records Per Page')}}\n        </button>\n        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n          <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeCustomerPerPage(5)\">5</button></li>\n          <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeCustomerPerPage(10)\">10</button></li>\n          <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeCustomerPerPage(15)\">15</button></li>\n        </ul>\n      </div>\n      <span class=\"navbar-brand\"></span>\n      <form class=\"d-flex\" role=\"search\">\n      <input class=\"form-control me-2\" type=\"search\" :placeholder=\"$t('Search')\" aria-label=\"Search\" v-model=\"search\">\n      <button class=\"btn btn-outline-success\" type=\"submit\">{{$t('Search')}}</button>\n      </form>\n    </div>\n  </nav>\n  \n  <div class=\"container\">\n    <h1>{{$t('Customer.Customers List')}}\n    <!-- Click the button to go to add customer page -->\n    <router-link :to=\"{name:'AddCustomer'}\"><i class=\"fa fa-cart-plus\" style=\"font-size:42px\"></i></router-link>\n    </h1>\n    \n    <br>\n    <!-- Show the following message if the customer is deleted successfully-->\n    <div class=\"alert alert-success\" v-if=\"isSuccess\">\n        {{$t('Customer.The customer is deleted successfully!')}}\n    </div>\n    <!-- Show the following message if the customer is edited successfully-->\n    <div class=\"alert alert-success\" v-if=\"isEdited\">\n        {{$t('Customer.The customer is edited successfully!')}}\n    </div>\n    <!-- Customer table to show existing customers in the database -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-stripped\">\n        <thead >\n          <!-- ID of the customer -->\n          <th>\n            <i class=\"fa fa-sort-numeric-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('id')\"/>\n              {{$t('Customer ID')}}\n          </th>\n          <!-- Name of the customer -->\n          <th >\n            <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('name')\"/>\n              {{$t('Name')}}\n          </th>\n          <!-- Address of the customer -->\n          <th>\n            <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('address')\"/>\n              {{$t('Address')}}\n          </th>\n          <!-- Email of the customer -->\n          <th>\n            <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('contact')\"/>\n              {{$t('Email')}}\n          </th>\n          <!-- Phone number of the customer -->\n          <th>\n            <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('phoneNumber')\"/>\n              {{$t('Phone Number')}}\n          </th>\n          <!-- Edit information of the customer -->\n          <th>{{$t('Edit')}}</th>\n        </thead>\n        <tbody>\n          <tr v-for = \"customer in filteredCustomers\" v-bind:key = \"customer.id\" class=\"table-bordered\">\n            <td>{{customer.id}}</td>\n            <td>{{customer.name}}</td>\n            <td>{{customer.address}}</td>\n            <td>{{customer.contact}}</td>\n            <td>{{customer.phoneNumber}}</td>\n            <td>\n              <div class=\"modal fade\" id=\"onDelete\" tabindex=\"-1\" aria-labelledby=\"onDeleteLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\">\n                                <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                    <h5 class=\"modal-title\" id=\"onDelete\">{{$t('CONFIRM')}}</h5>\n                                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                </div>\n                                <div class=\"modal-body\">{{$t('Are your sure to delete the customer?')}}</div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">{{$t('No')}}</button>\n                                    <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"deleteCustomer(this.customerId)\">{{$t('Yes')}}</button>\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n              <fa icon=\"trash\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#onDelete\"  @click=\"getCustomerId(customer.id)\"/>&nbsp;\n              <fa icon=\"edit\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\" @click=\"passCustomer(customer)\"/>    \n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- Show the total number of customers -->\n    <h5>{{$t('Customer.Total customers')}}: {{total}}</h5>\n    <!-- Download PDF format of the customer table -->\n    <img src=\"/static/Others/pdf.png\" width=\"38\" height=\"35\" type=\"button\" @click=\"downloadPDF\"/>\n    &nbsp\n    <img src=\"/static/Others/xlsx.png\" width=\"35\" height=\"35\" type=\"button\" @click=\"downloadExcel\"/>\n  </div>\n\n  <!--Page navigation bar-->\n    <nav class=\"navbar\">\n        <div class=\"container-fluid\">\n          <h5>Total Pages: {{this.totalPages}}</h5>\n            <a class=\"navbar-brand\"></a>\n            <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(this.pageNum - 1)\">{{$t('Previous')}}</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(0)\">{{this.pageNum+1}}</a></li>\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(pageNum+1)\">{{$t('Next')}}</a></li>\n                </ul>\n            </nav>\n        </div>\n    </nav>\n</template>\n\n<script>\nimport CustomerService from '@/services/Customer/CustomerService'\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as XLSX from 'xlsx'\n\nfunction s2ab(s) {\n  // Convert a string to an ArrayBuffer\n  const buf = new ArrayBuffer(s.length);\n  const view = new Uint8Array(buf);\n  for (let i = 0; i < s.length; i++) {\n    view[i] = s.charCodeAt(i) & 0xFF;\n  }\n  return buf;\n}\n\nexport default {\n    name: 'Customers',\n    data(){\n      return{\n        itemsPerPage: 5,//the number of customer shown in one page\n        pageNum: 0,//store current page number\n        customerId: '',\n        search:'',//store search content\n        editing: false,//true if the customer info need editing, else false\n        isSuccess: false,//true if the customer is deleted successfully, else false\n        isEdited: false,//true if the customer info is edited successfully, else false\n        fixedCustomers: [],//store all customers\n        customers: [],//store customers per page\n        pdfIconSize: '2em',\n        excelIconSize: '2em',\n      }\n    },\n    methods:{\n      //Get all customers from the database\n      async getCustomers(){\n        await CustomerService.getCustomers().then((response)=>{\n          this.customers = response.data;\n          this.fixedCustomers = response.data\n        });\n      },\n      //Delete a chosen customer from the database\n      deleteCustomer(customerId) {\n        CustomerService.deleteCustomer(customerId).then((response)=>{\n          this.isSuccess = true\n          this.isEdited = false\n          this.getCustomers()\n        });\n      },\n      //Update the information of a chosen customer\n      updateCustomer(){\n        axios\n          .put(`updateCustomer`, {\n            id: this.$refs.id.value,\n            name: this.$refs.name.value,\n            address: this.$refs.address.value,\n            phoneNumber: this.$refs.phoneNumber.value,\n            contact: this.$refs.contact.value,\n            remarks: this.$refs.remarks.value\n          })\n          .then((response) => {\n            this.isEdited = true;\n            this.isSuccess = false\n            console.log(response);\n            this.getCustomers(),\n            this.id = '',\n            this.name = '',\n            this.address = '',\n            this.phoneNumber = '',\n            this.contact = '',\n            this.remarks = ''\n\n          });\n      },\n      //Pass the chosen customer information to the modal dialog box\n      passCustomer(customer){\n        this.editing = true;\n        this.$refs.id.value = customer.id;\n        this.$refs.name.value = customer.name;\n        this.$refs.address.value = customer.address;\n        this.$refs.phoneNumber.value = customer.phoneNumber,\n        this.$refs.contact.value = customer.contact,\n        this.$refs.remarks.value = customer.remarks\n      },\n      //Get customers information as required after paging\n      pagination(pageNum){\n        this.pageNum = pageNum;\n        if(this.pageNum==-1) {\n          this.pageNum=0;\n          return;\n        }\n        CustomerService.pagination(pageNum,this.itemsPerPage).then((response)=>{\n          this.customers = response.data;\n        });\n      },\n      //Change the number of customers shown per page \n      changeCustomerPerPage(num){\n        this.itemsPerPage = num;\n        this.pagination(this.pageNum,this.itemsPerPage);\n      },\n      getCustomerId(id){\n        this.customerId = id\n      },\n      //Sort customers by a given field, such as id, name\n      sort(field){\n        CustomerService.sortAscending(this.pageNum, this.itemsPerPage, field).then((response)=>{\n          this.customers = response.data;\n        });\n      },\n      //Download the pdf format of the customer table\n      downloadPDF(){\n            const columns = [\n                    { header: 'Customer ID', dataKey: 'id' },\n                    { header: 'Name', dataKey: 'name' },\n                    { header: 'Address', dataKey: 'address' },\n                    { header: 'Phone Number', dataKey: 'phoneNumber' },\n                    { header: 'Contact', dataKey: 'contact' },\n                    { header: 'Remarks', dataKey: 'remarks' }\n                ];\n            const pdf = new jsPDF();\n            //Text is placed using x, y coordinates\n            pdf.setFontSize(20).text(\"Customer List\", 80, 10);\n            //Use autoTable plugin\n            autoTable(pdf, {\n                columns,\n                body: this.customers,\n                margin:{top: 30}\n            });\n            //Show total stock\n            pdf.setFontSize(16).text('Total customers: ' + this.total, 80, 20);\n            //Download pdf\n            pdf.save(\"Customers.pdf\");\n        },\n      //Download the excel format of the customer table\n      downloadExcel() {\n        const filteredCustomersWithoutUseless = this.filteredCustomers.map(customers => {\n            return {\n                CustomersID: customers.id,\n                Name: customers.name,\n                Address: customers.address,\n                PhoneNumber: customers.phoneNumber,\n                Email: customers.contact,\n                Description: customers.remarks,\n            };\n        });\n\n        // Create a new workbook\n        const wb = XLSX.utils.book_new();\n\n        // Add a new worksheet to the workbook\n        const ws = XLSX.utils.json_to_sheet(filteredCustomersWithoutUseless);\n\n        // Add the worksheet to the workbook\n        XLSX.utils.book_append_sheet(wb, ws, 'Customers');\n\n        // Write the workbook to a binary string\n        const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n\n        // Convert the binary string to a Blob object\n        const blob = new Blob([s2ab(wbout)], { type: 'application/octet-stream' });\n\n        // Create a temporary link to the file and trigger a download\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'Customers.xlsx';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    },\n    async created(){\n      //Get all customers data when the page is being loaded\n      await this.getCustomers()\n      this.itemsPerPage = this.customers.length\n    },\n    computed:{\n      //Get required customers after searching\n      filteredCustomers(){\n        return this.customers.filter(customer => customer.name.toLowerCase().includes(this.search.toLowerCase()));\n      },\n      //Get total number of customers\n      total(){\n        return this.customers.length;\n      },\n      totalPages(){\n        return (Math.ceil(this.fixedCustomers.length / this.itemsPerPage))\n      }\n    },\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}