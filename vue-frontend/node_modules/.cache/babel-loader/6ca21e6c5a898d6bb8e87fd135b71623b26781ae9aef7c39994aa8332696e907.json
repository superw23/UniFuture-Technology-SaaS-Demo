{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductService from '../../services/Product/ProductService';\nexport default {\n  name: 'ProductDetails',\n  data() {\n    return {\n      itemsPerPage: 5,\n      //the number of products shown in one page\n      pageNum: 0,\n      //store current page number\n      search: '',\n      //store search content\n      typeName: '',\n      //store the name of the product\n      isSuccess: false,\n      //true if the product is deleted successfully, else false\n      products: [] //store all products\n    };\n  },\n\n  methods: {\n    //Get all products of a given type from the database\n    getProducts() {\n      ProductService.getProductsWithGivenType(this.typeName).then(response => {\n        this.products = response.data;\n      });\n    },\n    //Delete a chosen product from the database\n    deleteProduct(productId) {\n      ProductService.deleteProduct(productId).then(response => {\n        this.isSuccess = true;\n        this.getProducts();\n      });\n    },\n    //Sort products by a given field, such as id, name\n    sort(field) {\n      ProductService.sortAscending(field).then(response => {\n        this.products = response.data;\n      });\n    },\n    //Get products information as required after paging\n    pagination(pageNum) {\n      this.pageNum = pageNum;\n      if (this.pageNum == -1) {\n        this.pageNum = 0;\n        return;\n      }\n      ProductService.pagination(pageNum, this.itemsPerPage).then(response => {\n        this.products = response.data;\n      });\n    },\n    //Change the number of products shown per page \n    changeItemPerPage(num) {\n      this.itemsPerPage = num;\n      this.pagination(this.pageNum, this.itemsPerPage);\n    },\n    //go to product list page\n    backToProductPage() {\n      this.$router.push({\n        path: '/viewProduct'\n      });\n    }\n  },\n  created() {\n    this.typeName = this.$route.params.typeName;\n    //Get all products data when the page is being loaded\n    this.getProducts();\n  },\n  computed: {\n    //Get required products after searching\n    filteredProducts() {\n      return this.products.filter(product => product.name.toLowerCase().includes(this.search.toLowerCase()));\n    },\n    //Get total number of products\n    total() {\n      return this.products.length;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6GA,OAAOA,cAAa,MAAO,uCAAsC;AACjE,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,GAAE;IACF,OAAM;MACJC,YAAY,EAAE,CAAC;MAAC;MAChBC,OAAO,EAAE,CAAC;MAAC;MACXC,MAAM,EAAC,EAAE;MAAC;MACVC,QAAQ,EAAE,EAAE;MAAC;MACbC,SAAS,EAAE,KAAK;MAAC;MACjBC,QAAQ,EAAE,EAAE,CAAC;IACf;EACJ,CAAC;;EACDC,OAAO,EAAC;IACJ;IACAC,WAAW,GAAE;MACTV,cAAc,CAACW,wBAAwB,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAG;QACpE,IAAI,CAACL,QAAO,GAAIK,QAAQ,CAACX,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IACD;IACAY,aAAa,CAACC,SAAS,EAAE;MACrBf,cAAc,CAACc,aAAa,CAACC,SAAS,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAG;QACrD,IAAI,CAACN,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACG,WAAW,EAAC;MACrB,CAAC,CAAC;IACN,CAAC;IACD;IACAM,IAAI,CAACC,KAAK,EAAC;MACPjB,cAAc,CAACkB,aAAa,CAACD,KAAK,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAG;QACjD,IAAI,CAACL,QAAO,GAAIK,QAAQ,CAACX,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IACD;IACAiB,UAAU,CAACf,OAAO,EAAC;MACf,IAAI,CAACA,OAAM,GAAIA,OAAO;MACtB,IAAG,IAAI,CAACA,OAAO,IAAE,CAAC,CAAC,EAAE;QACjB,IAAI,CAACA,OAAO,GAAC,CAAC;QACd;MACJ;MACAJ,cAAc,CAACmB,UAAU,CAACf,OAAO,EAAC,IAAI,CAACD,YAAY,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAG;QAClE,IAAI,CAACL,QAAO,GAAIK,QAAQ,CAACX,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IACD;IACAkB,iBAAiB,CAACC,GAAG,EAAC;MAClB,IAAI,CAAClB,YAAW,GAAIkB,GAAG;MACvB,IAAI,CAACF,UAAU,CAAC,IAAI,CAACf,OAAO,EAAC,IAAI,CAACD,YAAY,CAAC;IACnD,CAAC;IACD;IACAmB,iBAAiB,GAAE;MACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAACC,IAAI,EAAC;MAAc,CAAC;IAC3C;EACJ,CAAC;EACDC,OAAO,GAAE;IACP,IAAI,CAACpB,QAAO,GAAI,IAAI,CAACqB,MAAM,CAACC,MAAM,CAACtB,QAAO;IAC1C;IACA,IAAI,CAACI,WAAW,EAAC;EACnB,CAAC;EACDmB,QAAQ,EAAC;IACL;IACAC,gBAAgB,GAAE;MACd,OAAO,IAAI,CAACtB,QAAQ,CAACuB,MAAM,CAACC,OAAM,IAAKA,OAAO,CAAC/B,IAAI,CAACgC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC7B,MAAM,CAAC4B,WAAW,EAAE,CAAC,CAAC;IAC1G,CAAC;IACD;IACAE,KAAK,GAAE;MACL,OAAO,IAAI,CAAC3B,QAAQ,CAAC4B,MAAM;IAC7B;EACJ;AACJ","names":["ProductService","name","data","itemsPerPage","pageNum","search","typeName","isSuccess","products","methods","getProducts","getProductsWithGivenType","then","response","deleteProduct","productId","sort","field","sortAscending","pagination","changeItemPerPage","num","backToProductPage","$router","push","path","created","$route","params","computed","filteredProducts","filter","product","toLowerCase","includes","total","length"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Inventory\\TypeDetails.vue"],"sourcesContent":["// Made by GRPTeam202205\r\n<template>\r\n    <!-- Product list page for a given type-->\r\n    <!-- Search bar by searching the name of the product -->\r\n    <nav class=\"navbar\">\r\n        <div class=\"container-fluid\">\r\n            <!--Drop-down menu to choose the number of products per page-->\r\n            <div class=\"dropdown\">\r\n                <router-link :to=\"{name:'Product'}\">\r\n                    <img src=\"/static/Others/back-button.png\" width=\"30\" height=\"30\" type=\"button\" @click=\"backToProductPage\"/>\r\n                </router-link>\r\n                <br>\r\n                <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    {{$t('Records Per Page')}}\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeItemPerPage(5)\">5</button></li>\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeItemPerPage(10)\">10</button></li>\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeItemPerPage(15)\">15</button></li>\r\n                </ul>\r\n            </div>\r\n            <a class=\"navbar-brand\"></a>\r\n            <form class=\"d-flex\" role=\"search\">\r\n            <input class=\"form-control me-2\" type=\"search\" :placeholder=\"$t('Search')\" aria-label=\"Search\" v-model=\"search\">\r\n            <button class=\"btn btn-outline-success\" type=\"submit\">{{$t('Search')}}</button>\r\n            </form>\r\n        </div>\r\n    </nav>\r\n\r\n    <div class=\"container\">\r\n        <h1 class=\"test-center\">\r\n        {{$t('Product.Products List')}}\r\n        </h1>\r\n        <h2>\r\n        {{$t('Type of Products: ')}}{{this.typeName}}\r\n        </h2>\r\n        <!-- Success Alert will be shown if the product is successfully deleted from the database. -->\r\n        <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n            {{$t('Product.The product is deleted successfully!')}}\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n        <table class=\"table table-stripped\">\r\n            <thead>\r\n                <th>\r\n                    <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('name')\"/>\r\n                    {{$t('Name')}}\r\n                </th>\r\n                <th>\r\n                    <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('quantity')\"/>\r\n                    {{$t('Quantity')}}\r\n                </th>\r\n                <th>\r\n                    <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('purchasePrice')\"/>\r\n                    {{$t('Purchase.Purchase Price')}}\r\n                </th>\r\n                <th>\r\n                    <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('sellPrice')\"/>\r\n                    {{$t('Sale Price')}}\r\n                </th>\r\n                <th>\r\n                    {{$t('Supplier Info')}}\r\n                </th>\r\n                <th>\r\n                    <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('remarks')\"/>\r\n                    {{$t('Description')}}\r\n                </th>\r\n                <th>{{$t('Edit')}}</th>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for = \"product in filteredProducts\" v-bind:key = \"product.id\" class=\"table-bordered\">\r\n                    <td>{{product.name}}</td>\r\n                    <td>{{product.quantity}}</td>\r\n                    <td>{{product.purchasePrice}}</td>\r\n                    <td>{{product.sellPrice}}</td>\r\n                    <td>\r\n                        <router-link :to=\"'/supplierDetails/'+ product.name\">\r\n                            <fa icon=\"address-card\" type=\"button\" />\r\n                        </router-link>\r\n                    </td>  \r\n                    <td>{{product.remarks}}</td>\r\n                    <td>\r\n                        <fa icon=\"trash\" type=\"button\" data-bs-toggle=\"modal\" @click=\"deleteProduct(product.id)\"/>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <!-- Show the total product quantity -->\r\n        <h5>{{$t('Total stock')}}: {{total}}</h5>\r\n    </div>\r\n\r\n    <!--Page navigation bar-->\r\n    <nav class=\"navbar\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\"></a>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(this.pageNum - 1)\">{{$t('Previous')}}</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(0)\">1</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(1)\">2</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(2)\">3</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(pageNum+1)\">{{$t('Next')}}</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\nimport ProductService from '../../services/Product/ProductService'\r\nexport default {\r\n    name: 'ProductDetails',\r\n    data(){\r\n        return{\r\n          itemsPerPage: 5,//the number of products shown in one page\r\n          pageNum: 0,//store current page number\r\n          search:'',//store search content\r\n          typeName: '',//store the name of the product\r\n          isSuccess: false,//true if the product is deleted successfully, else false\r\n          products: [],//store all products\r\n        }\r\n    },\r\n    methods:{\r\n        //Get all products of a given type from the database\r\n        getProducts(){\r\n            ProductService.getProductsWithGivenType(this.typeName).then((response)=>{\r\n                this.products = response.data;\r\n            });\r\n        },\r\n        //Delete a chosen product from the database\r\n        deleteProduct(productId) {\r\n            ProductService.deleteProduct(productId).then((response)=>{\r\n                this.isSuccess = true;\r\n                this.getProducts()\r\n            });\r\n        },\r\n        //Sort products by a given field, such as id, name\r\n        sort(field){\r\n            ProductService.sortAscending(field).then((response)=>{\r\n                this.products = response.data;\r\n            });\r\n        },\r\n        //Get products information as required after paging\r\n        pagination(pageNum){\r\n            this.pageNum = pageNum;\r\n            if(this.pageNum==-1) {\r\n                this.pageNum=0;\r\n                return;\r\n            }\r\n            ProductService.pagination(pageNum,this.itemsPerPage).then((response)=>{\r\n                this.products = response.data;\r\n            });\r\n        },\r\n        //Change the number of products shown per page \r\n        changeItemPerPage(num){\r\n            this.itemsPerPage = num;\r\n            this.pagination(this.pageNum,this.itemsPerPage);\r\n        },\r\n        //go to product list page\r\n        backToProductPage(){\r\n            this.$router.push({path:'/viewProduct'})\r\n        }\r\n    },\r\n    created(){\r\n      this.typeName = this.$route.params.typeName\r\n      //Get all products data when the page is being loaded\r\n      this.getProducts()\r\n    },\r\n    computed:{\r\n        //Get required products after searching\r\n        filteredProducts(){\r\n            return this.products.filter(product => product.name.toLowerCase().includes(this.search.toLowerCase()));\r\n        },\r\n        //Get total number of products\r\n        total(){\r\n          return this.products.length;\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}