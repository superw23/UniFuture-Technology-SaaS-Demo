{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SupplierService from '@/services/Supplier/SupplierService';\nimport axios from 'axios';\nexport default {\n  name: 'SupplierDetails',\n  data() {\n    return {\n      itemsPerPage: 5,\n      //the number of suppliers shown in one page\n      pageNum: 0,\n      //store current page number\n      search: '',\n      //store search content\n      productName: '',\n      //store the name of the product\n      editing: false,\n      //true if the supplier info need editing, else false\n      isSuccess: false,\n      //true if the supplier is deleted successfully, else false\n      isEdited: false,\n      //true if the supplier info is edited successfully, else false\n      fixedSuppliers: [],\n      //store all suppliers\n      suppliers: [] //store suppliers per page\n    };\n  },\n\n  methods: {\n    //Get all suppliers from the database\n    async getSuppliers() {\n      await SupplierService.getSuppliersWithGivenProduct(this.productName).then(response => {\n        this.suppliers = response.data;\n        this.fixedSuppliers = response.data;\n      });\n    },\n    //Delete a chosen supplier from the database\n    deleteSupplier(supplierId) {\n      SupplierService.deleteSupplier(supplierId).then(response => {\n        this.isSuccess = true;\n        this.getSuppliers();\n      });\n    },\n    //Update the information of a chosen supplier\n    updateSupplier() {\n      axios.put(`updateSupplier`, {\n        id: this.$refs.id.value,\n        address: this.$refs.address.value,\n        phoneNumber: this.$refs.phoneNumber.value,\n        contact: this.$refs.contact.value,\n        remarks: this.$refs.remarks.value,\n        company: this.$refs.company.value\n      }).then(response => {\n        this.isEdited = true;\n        console.log(response);\n        this.$emit('postcreated');\n      });\n    },\n    //Pass the chosen supplier information to the modal dialog box\n    passSupplier(supplier) {\n      this.editing = true;\n      this.$refs.id.value = supplier.id;\n      this.$refs.address.value = supplier.address;\n      this.$refs.phoneNumber.value = supplier.phoneNumber, this.$refs.contact.value = supplier.contact, this.$refs.remarks.value = supplier.remarks, this.$refs.company.value = supplier.company;\n    },\n    //Sort suppliers by a given field, such as id, name\n    sort(field) {\n      SupplierService.sortAscending(this.pageNum, this.itemsPerPage, field).then(response => {\n        this.suppliers = response.data;\n      });\n    },\n    //Get suppliers information as required after paging\n    pagination(pageNum) {\n      this.pageNum = pageNum;\n      if (this.pageNum == -1) {\n        this.pageNum = 0;\n        return;\n      }\n      console.log(this.pageNum);\n      SupplierService.pagination(pageNum, this.itemsPerPage).then(response => {\n        this.suppliers = response.data;\n      });\n    },\n    //Change the number of suppliers shown per page \n    changeSupplierPerPage(num) {\n      this.itemsPerPage = num;\n      this.pagination(this.pageNum, this.itemsPerPage);\n    },\n    //go to product list page\n    backToProductPage() {\n      this.$router.push({\n        path: '/viewProduct'\n      });\n    }\n  },\n  async created() {\n    console.log(this.$route.params.productName);\n    this.productName = this.$route.params.productName;\n    //Get all suppliers data when the page is being loaded\n    await this.getSuppliers();\n    this.itemsPerPage = this.suppliers.length;\n    this.fixedSuppliers = this.getSuppliers();\n  },\n  computed: {\n    //Get required suppliers after searching\n    filteredSuppliers() {\n      return this.suppliers.filter(supplier => supplier.company.toLowerCase().includes(this.search.toLowerCase()));\n    },\n    //Get total number of suppliers\n    total() {\n      return this.suppliers.length;\n    },\n    totalPages() {\n      return Math.ceil(this.fixedSuppliers.length / this.itemsPerPage);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["SupplierService","axios","name","data","itemsPerPage","pageNum","search","productName","editing","isSuccess","isEdited","fixedSuppliers","suppliers","methods","getSuppliers","getSuppliersWithGivenProduct","then","response","deleteSupplier","supplierId","updateSupplier","put","id","$refs","value","address","phoneNumber","contact","remarks","company","console","log","$emit","passSupplier","supplier","sort","field","sortAscending","pagination","changeSupplierPerPage","num","backToProductPage","$router","push","path","created","$route","params","length","computed","filteredSuppliers","filter","toLowerCase","includes","total","totalPages","Math","ceil"],"sourceRoot":"","sources":["C:\\Users\\Ella\\Desktop\\vue-frontend\\src\\components\\Procurement\\Supplier\\SupplierDetails.vue"],"sourcesContent":["// Made by GRPTeam202205\r\n<template>\r\n  <!-- Supplier list page for a given product-->\r\n  <!-- Show the modal dialog box in order to change info of existing supplier  -->\r\n<div class=\"modal fade\" id=\"exampleModal\" ref=\"supplierModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <!-- Title of the modal dialog box -->\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n          <span v-if=\"editing\">{{$t('Supplier.Edit Supplier')}}</span>\r\n          <span v-else>{{$t('Supplier.Add New Supplier')}}</span>\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <!-- Body of the modal dialog box consists of information of a chosen supplier -->\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"mb-3\">\r\n            <label for=\"id\" class=\"col-form-label\">{{$t('ID')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"id\" ref=\"id\" value=\"\" disabled=\"disabled\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"company\" class=\"col-form-label\">{{$t('Company Name')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"company\" ref=\"company\" value=\"\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"address\" class=\"col-form-label\">{{$t('Address')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"address\" ref=\"address\" value=\"\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"phoneNumber\" class=\"col-form-label\">{{$t('Phone Number')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" ref=\"phoneNumber\" value=\"\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"contact\" class=\"col-form-label\">{{$t('Contact')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"contact\" ref=\"contact\" value=\"\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"remarks\" class=\"col-form-label\">{{$t('Remarks')}}:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"remarks\" ref=\"remarks\" value=\"\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">{{$t('Close')}}</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"updateSupplier()\">{{$t('Send')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  <!-- Search bar by searching the name of the supplier -->\r\n    <nav class=\"navbar\">\r\n        <div class=\"container-fluid\">\r\n            <!--Drop-down menu to choose the number of suppliers per page-->\r\n            <div class=\"dropdown\">\r\n                <router-link :to=\"{name:'Product'}\">\r\n                    <img src=\"/static/Others/back-button.png\" width=\"30\" height=\"30\" type=\"button\" @click=\"backToProductPage\"/>\r\n                </router-link>\r\n                <br>\r\n                <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    {{$t('Supplier.Suppliers Per Page')}}\r\n                </button>\r\n                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeSupplierPerPage(5)\">5</button></li>\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeSupplierPerPage(10)\">10</button></li>\r\n                    <li><button class=\"dropdown-item\" type=\"button\" @click=\"changeSupplierPerPage(15)\">15</button></li>\r\n                </ul>\r\n            </div>\r\n            <a class=\"navbar-brand\"></a>\r\n            <form class=\"d-flex\" role=\"search\">\r\n            <input class=\"form-control me-2\" type=\"search\" :placeholder=\"$t('Search')\" aria-label=\"Search\" v-model=\"search\">\r\n            <button class=\"btn btn-outline-success\" type=\"submit\">{{$t('Search')}}</button>\r\n            </form>\r\n        </div>\r\n    </nav>\r\n\r\n  <div class=\"container\">\r\n    <h1 class=\"test-center\">\r\n      {{$t('Supplier.Suppliers List')}}\r\n    </h1>\r\n    <h2>\r\n      {{$t('Product Name: '+ this.productName)}}\r\n    </h2>\r\n    <!-- Show the following message if the supplier is deleted successfully-->\r\n    <div class=\"alert alert-success\" v-if=\"isSuccess\">\r\n        {{$t('Supplier.The supplier is deleted successfully!')}}\r\n    </div>\r\n    <!-- Show the following message if the supplier is edited successfully-->\r\n    <div class=\"alert alert-success\" v-if=\"isEdited\">\r\n        {{$t('Supplier.The supplier is edited successfully!')}}\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n    <table class=\"table table-stripped\">\r\n        <thead>\r\n            <th>\r\n              <i class=\"fa fa-sort-numeric-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('id')\"/>\r\n              {{$t('Supplier ID')}}\r\n            </th>\r\n            <th>\r\n              <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('company')\"/>\r\n              {{$t('Company Name')}}\r\n            </th>\r\n            <th>\r\n              <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('address')\"/>\r\n              {{$t('Address')}}\r\n            </th>\r\n            <th>\r\n              <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('phoneNumber')\"/>\r\n              {{$t('Phone Number')}}\r\n            </th>\r\n            <th>\r\n              <i class=\"fa fa-sort-alpha-asc\" type=\"button\" aria-hidden=\"true\" @click=\"sort('contact')\"/>\r\n              {{$t('Email')}}\r\n            </th>\r\n            <th>{{$t('Edit')}}</th>\r\n        </thead>\r\n        <tbody>\r\n            <tr v-for = \"supplier in filteredSuppliers\" v-bind:key = \"supplier.id\" class=\"table-bordered\">\r\n                <td>{{supplier.id}}</td>\r\n                <td>{{supplier.company}}</td>\r\n                <td>{{supplier.address}}</td>\r\n                <td>{{supplier.phoneNumber}}</td>\r\n                <td>{{supplier.contact}}</td>\r\n                <td>\r\n                  <fa icon=\"trash\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#returnSale\" @click=\"deleteSupplier(supplier.id)\"/>&nbsp;\r\n                  <fa icon=\"edit\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\" @click=\"passSupplier(supplier)\"/>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <h5>{{$t('Supplier.Total suppliers')}}: {{total}}</h5>\r\n  </div>\r\n\r\n  <!--Page navigation bar-->\r\n    <nav class=\"navbar\">\r\n        <div class=\"container-fluid\">\r\n            <h5>Total Pages: {{this.totalPages}}</h5>\r\n            <a class=\"navbar-brand\"></a>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul class=\"pagination\">\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(this.pageNum - 1)\">{{$t('Previous')}}</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(0)\">{{this.pageNum+1}}</a></li>\r\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\" @click=\"pagination(pageNum+1)\">{{$t('Next')}}</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\nimport SupplierService from '@/services/Supplier/SupplierService'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'SupplierDetails',\r\n    data(){\r\n        return{\r\n          itemsPerPage: 5,//the number of suppliers shown in one page\r\n          pageNum: 0,//store current page number\r\n          search:'',//store search content\r\n          productName: '',//store the name of the product\r\n          editing: false,//true if the supplier info need editing, else false\r\n          isSuccess: false,//true if the supplier is deleted successfully, else false\r\n          isEdited: false,//true if the supplier info is edited successfully, else false\r\n          fixedSuppliers: [],//store all suppliers\r\n          suppliers: [],//store suppliers per page\r\n        }\r\n    },\r\n    methods:{\r\n        //Get all suppliers from the database\r\n        async getSuppliers(){\r\n            await SupplierService.getSuppliersWithGivenProduct(this.productName).then((response)=>{\r\n                this.suppliers = response.data;\r\n                this.fixedSuppliers = response.data\r\n            });\r\n        },\r\n        //Delete a chosen supplier from the database\r\n        deleteSupplier(supplierId) {\r\n            SupplierService.deleteSupplier(supplierId).then((response)=>{\r\n              this.isSuccess = true;\r\n              this.getSuppliers();\r\n            });\r\n        },\r\n        //Update the information of a chosen supplier\r\n        updateSupplier(){\r\n           axios\r\n                .put(`updateSupplier`, {\r\n                    id: this.$refs.id.value,\r\n                    address: this.$refs.address.value,\r\n                    phoneNumber: this.$refs.phoneNumber.value,\r\n                    contact: this.$refs.contact.value,\r\n                    remarks: this.$refs.remarks.value,\r\n                    company: this.$refs.company.value\r\n                })\r\n                .then((response) => {\r\n                    this.isEdited = true;\r\n                    console.log(response);\r\n                    this.$emit('postcreated');\r\n                });\r\n          \r\n        },\r\n        //Pass the chosen supplier information to the modal dialog box\r\n        passSupplier(supplier){\r\n          this.editing = true;\r\n          this.$refs.id.value = supplier.id;\r\n          this.$refs.address.value = supplier.address;\r\n          this.$refs.phoneNumber.value = supplier.phoneNumber,\r\n          this.$refs.contact.value = supplier.contact,\r\n          this.$refs.remarks.value = supplier.remarks,\r\n          this.$refs.company.value = supplier.company\r\n        },\r\n        //Sort suppliers by a given field, such as id, name\r\n        sort(field){\r\n            SupplierService.sortAscending(this.pageNum, this.itemsPerPage, field).then((response)=>{\r\n                this.suppliers = response.data;\r\n            });\r\n        },\r\n        //Get suppliers information as required after paging\r\n        pagination(pageNum){\r\n            this.pageNum = pageNum;\r\n            if(this.pageNum==-1) {\r\n                this.pageNum=0;\r\n                return;\r\n            }\r\n            console.log(this.pageNum) ;\r\n            SupplierService.pagination(pageNum,this.itemsPerPage).then((response)=>{\r\n                this.suppliers = response.data;\r\n            });\r\n        },\r\n        //Change the number of suppliers shown per page \r\n        changeSupplierPerPage(num){\r\n            this.itemsPerPage = num;\r\n            this.pagination(this.pageNum,this.itemsPerPage);\r\n        },\r\n        //go to product list page\r\n        backToProductPage(){\r\n            this.$router.push({path:'/viewProduct'})\r\n        }\r\n    },\r\n    async created(){\r\n      console.log(this.$route.params.productName)\r\n      this.productName = this.$route.params.productName\r\n      //Get all suppliers data when the page is being loaded\r\n      await this.getSuppliers()\r\n      this.itemsPerPage = this.suppliers.length\r\n      this.fixedSuppliers = this.getSuppliers()\r\n    },\r\n    computed:{\r\n      //Get required suppliers after searching\r\n      filteredSuppliers(){\r\n          return this.suppliers.filter(supplier => supplier.company.toLowerCase().includes(this.search.toLowerCase()));\r\n      },\r\n      //Get total number of suppliers\r\n      total(){\r\n        return this.suppliers.length;\r\n      },\r\n      totalPages(){\r\n        return (Math.ceil(this.fixedSuppliers.length / this.itemsPerPage))\r\n      }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}